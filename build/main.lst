ARM GAS  /tmp/cc3SeI2V.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.udpClient_send1,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	udpClient_send1:
  25              	.LFB167:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "adc.h"
  23:Core/Src/main.c **** #include "dma.h"
  24:Core/Src/main.c **** #include "lwip.h"
  25:Core/Src/main.c **** #include "tim.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "lwip/pbuf.h"
  31:Core/Src/main.c **** #include "lwip/udp.h"
  32:Core/Src/main.c **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 2


  33:Core/Src/main.c **** #include "stdio.h"
  34:Core/Src/main.c **** #include "string.h"
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END Includes */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  40:Core/Src/main.c **** #define UDP_SYN 22
  41:Core/Src/main.c **** #define UDP_EOT 4
  42:Core/Src/main.c **** #define CHAN_ADDR 3
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** extern struct netif gnetif;
  45:Core/Src/main.c **** #define ADC_BUF_LEN 1024
  46:Core/Src/main.c **** #define ADC_BUF_HALF_LEN ADC_BUF_LEN / 2
  47:Core/Src/main.c **** #define UDP_BUF_HALF_LEN ADC_BUF_LEN
  48:Core/Src/main.c **** #define UDP_BUF_LEN (ADC_BUF_LEN * 2)
  49:Core/Src/main.c **** // uint8_t udp_buf[UDP_BUF_LEN];
  50:Core/Src/main.c **** uint16_t adc_buf[ADC_BUF_LEN];
  51:Core/Src/main.c **** // uint16_t adc_buf_test[ADC_BUF_LEN];
  52:Core/Src/main.c **** //float adcVoltage[ADC_BUF_LEN];
  53:Core/Src/main.c **** struct udp_pcb *upcb;
  54:Core/Src/main.c **** struct pbuf *txBuf;
  55:Core/Src/main.c **** int APP_ERROR_CODE = 0;
  56:Core/Src/main.c **** //int counter = 8;
  57:Core/Src/main.c **** /* USER CODE END PTD */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN PD */
  61:Core/Src/main.c **** /* USER CODE END PD */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN PM */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PM */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PV */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  75:Core/Src/main.c **** void SystemClock_Config(void);
  76:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  81:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  82:Core/Src/main.c **** ///
  83:Core/Src/main.c **** ///
  84:Core/Src/main.c **** #define UDP_HEAD_BUF_LEN 2
  85:Core/Src/main.c **** uint8_t buf_head[UDP_HEAD_BUF_LEN] = {UDP_SYN, CHAN_ADDR};
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** static void udpClient_send1(void) {
  27              		.loc 1 87 35 view -0
  28              		.cfi_startproc
ARM GAS  /tmp/cc3SeI2V.s 			page 3


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  88:Core/Src/main.c **** 	txBuf = pbuf_alloc(PBUF_TRANSPORT, UDP_BUF_HALF_LEN + UDP_HEAD_BUF_LEN, PBUF_RAM);
  36              		.loc 1 88 2 view .LVU1
  37              		.loc 1 88 10 is_stmt 0 view .LVU2
  38 0002 4FF42072 		mov	r2, #640
  39 0006 40F20241 		movw	r1, #1026
  40 000a 3620     		movs	r0, #54
  41 000c FFF7FEFF 		bl	pbuf_alloc
  42              	.LVL0:
  43              		.loc 1 88 8 view .LVU3
  44 0010 0E4B     		ldr	r3, .L4
  45 0012 1860     		str	r0, [r3]
  89:Core/Src/main.c **** 	if (txBuf != NULL) {
  46              		.loc 1 89 2 is_stmt 1 view .LVU4
  47              		.loc 1 89 5 is_stmt 0 view .LVU5
  48 0014 A8B1     		cbz	r0, .L2
  49              	.LBB24:
  90:Core/Src/main.c **** 		pbuf_take_at(txBuf, &buf_head, UDP_HEAD_BUF_LEN, 0);
  50              		.loc 1 90 3 is_stmt 1 view .LVU6
  51 0016 0023     		movs	r3, #0
  52 0018 0222     		movs	r2, #2
  53 001a 0D49     		ldr	r1, .L4+4
  54 001c FFF7FEFF 		bl	pbuf_take_at
  55              	.LVL1:
  91:Core/Src/main.c **** 		pbuf_take_at(
  56              		.loc 1 91 3 view .LVU7
  57 0020 0A4C     		ldr	r4, .L4
  58 0022 0223     		movs	r3, #2
  59 0024 4FF48062 		mov	r2, #1024
  60 0028 0A49     		ldr	r1, .L4+8
  61 002a 2068     		ldr	r0, [r4]
  62 002c FFF7FEFF 		bl	pbuf_take_at
  63              	.LVL2:
  92:Core/Src/main.c ****       txBuf, 
  93:Core/Src/main.c ****       &(adc_buf[0]), 
  94:Core/Src/main.c ****       UDP_BUF_HALF_LEN,   // length
  95:Core/Src/main.c ****       UDP_HEAD_BUF_LEN    // offset
  96:Core/Src/main.c ****     );
  97:Core/Src/main.c **** 		err_t err = udp_send(upcb, txBuf);
  64              		.loc 1 97 3 view .LVU8
  65              		.loc 1 97 15 is_stmt 0 view .LVU9
  66 0030 2168     		ldr	r1, [r4]
  67 0032 094B     		ldr	r3, .L4+12
  68 0034 1868     		ldr	r0, [r3]
  69 0036 FFF7FEFF 		bl	udp_send
  70              	.LVL3:
  98:Core/Src/main.c **** 		if (err != ERR_OK) {
  71              		.loc 1 98 3 is_stmt 1 view .LVU10
  72              		.loc 1 98 6 is_stmt 0 view .LVU11
  73 003a 10B1     		cbz	r0, .L2
  99:Core/Src/main.c ****       APP_ERROR_CODE = 1;
ARM GAS  /tmp/cc3SeI2V.s 			page 4


  74              		.loc 1 99 7 is_stmt 1 view .LVU12
  75              		.loc 1 99 22 is_stmt 0 view .LVU13
  76 003c 074B     		ldr	r3, .L4+16
  77 003e 0122     		movs	r2, #1
  78 0040 1A60     		str	r2, [r3]
  79              	.LVL4:
  80              	.L2:
  81              		.loc 1 99 22 view .LVU14
  82              	.LBE24:
 100:Core/Src/main.c **** 		}
 101:Core/Src/main.c **** 	}
 102:Core/Src/main.c **** 	pbuf_free(txBuf);
  83              		.loc 1 102 2 is_stmt 1 view .LVU15
  84 0042 024B     		ldr	r3, .L4
  85 0044 1868     		ldr	r0, [r3]
  86 0046 FFF7FEFF 		bl	pbuf_free
  87              	.LVL5:
 103:Core/Src/main.c **** }
  88              		.loc 1 103 1 is_stmt 0 view .LVU16
  89 004a 10BD     		pop	{r4, pc}
  90              	.L5:
  91              		.align	2
  92              	.L4:
  93 004c 00000000 		.word	.LANCHOR0
  94 0050 00000000 		.word	.LANCHOR1
  95 0054 00000000 		.word	.LANCHOR2
  96 0058 00000000 		.word	.LANCHOR3
  97 005c 00000000 		.word	.LANCHOR4
  98              		.cfi_endproc
  99              	.LFE167:
 101              		.section	.text.udpClient_send2,"ax",%progbits
 102              		.align	1
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 107              	udpClient_send2:
 108              	.LFB168:
 104:Core/Src/main.c **** ///
 105:Core/Src/main.c **** ///  
 106:Core/Src/main.c **** static void udpClient_send2(void) {
 109              		.loc 1 106 35 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 10B5     		push	{r4, lr}
 114              	.LCFI1:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 4, -8
 117              		.cfi_offset 14, -4
 107:Core/Src/main.c **** 	txBuf = pbuf_alloc(PBUF_TRANSPORT, UDP_BUF_HALF_LEN + UDP_HEAD_BUF_LEN, PBUF_RAM);
 118              		.loc 1 107 2 view .LVU18
 119              		.loc 1 107 10 is_stmt 0 view .LVU19
 120 0002 4FF42072 		mov	r2, #640
 121 0006 40F20241 		movw	r1, #1026
 122 000a 3620     		movs	r0, #54
 123 000c FFF7FEFF 		bl	pbuf_alloc
 124              	.LVL6:
ARM GAS  /tmp/cc3SeI2V.s 			page 5


 125              		.loc 1 107 8 view .LVU20
 126 0010 0E4B     		ldr	r3, .L9
 127 0012 1860     		str	r0, [r3]
 108:Core/Src/main.c **** 	if (txBuf != NULL) {
 128              		.loc 1 108 2 is_stmt 1 view .LVU21
 129              		.loc 1 108 5 is_stmt 0 view .LVU22
 130 0014 A8B1     		cbz	r0, .L7
 131              	.LBB25:
 109:Core/Src/main.c **** 		pbuf_take_at(txBuf, &buf_head, UDP_HEAD_BUF_LEN, 0);    
 132              		.loc 1 109 3 is_stmt 1 view .LVU23
 133 0016 0023     		movs	r3, #0
 134 0018 0222     		movs	r2, #2
 135 001a 0D49     		ldr	r1, .L9+4
 136 001c FFF7FEFF 		bl	pbuf_take_at
 137              	.LVL7:
 110:Core/Src/main.c **** 		pbuf_take_at(
 138              		.loc 1 110 3 view .LVU24
 139 0020 0A4C     		ldr	r4, .L9
 140 0022 0223     		movs	r3, #2
 141 0024 4FF48062 		mov	r2, #1024
 142 0028 0A49     		ldr	r1, .L9+8
 143 002a 2068     		ldr	r0, [r4]
 144 002c FFF7FEFF 		bl	pbuf_take_at
 145              	.LVL8:
 111:Core/Src/main.c ****       txBuf, 
 112:Core/Src/main.c ****       &(adc_buf[ADC_BUF_HALF_LEN]), 
 113:Core/Src/main.c ****       UDP_BUF_HALF_LEN,   // length
 114:Core/Src/main.c ****       UDP_HEAD_BUF_LEN    // offset
 115:Core/Src/main.c ****     );
 116:Core/Src/main.c **** 		err_t err = udp_send(upcb, txBuf);
 146              		.loc 1 116 3 view .LVU25
 147              		.loc 1 116 15 is_stmt 0 view .LVU26
 148 0030 2168     		ldr	r1, [r4]
 149 0032 094B     		ldr	r3, .L9+12
 150 0034 1868     		ldr	r0, [r3]
 151 0036 FFF7FEFF 		bl	udp_send
 152              	.LVL9:
 117:Core/Src/main.c **** 		if (err != ERR_OK) {
 153              		.loc 1 117 3 is_stmt 1 view .LVU27
 154              		.loc 1 117 6 is_stmt 0 view .LVU28
 155 003a 10B1     		cbz	r0, .L7
 118:Core/Src/main.c ****       APP_ERROR_CODE = 1;
 156              		.loc 1 118 7 is_stmt 1 view .LVU29
 157              		.loc 1 118 22 is_stmt 0 view .LVU30
 158 003c 074B     		ldr	r3, .L9+16
 159 003e 0122     		movs	r2, #1
 160 0040 1A60     		str	r2, [r3]
 161              	.LVL10:
 162              	.L7:
 163              		.loc 1 118 22 view .LVU31
 164              	.LBE25:
 119:Core/Src/main.c **** 		}
 120:Core/Src/main.c **** 	}
 121:Core/Src/main.c **** 	pbuf_free(txBuf);
 165              		.loc 1 121 2 is_stmt 1 view .LVU32
 166 0042 024B     		ldr	r3, .L9
 167 0044 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc3SeI2V.s 			page 6


 168 0046 FFF7FEFF 		bl	pbuf_free
 169              	.LVL11:
 122:Core/Src/main.c **** }
 170              		.loc 1 122 1 is_stmt 0 view .LVU33
 171 004a 10BD     		pop	{r4, pc}
 172              	.L10:
 173              		.align	2
 174              	.L9:
 175 004c 00000000 		.word	.LANCHOR0
 176 0050 00000000 		.word	.LANCHOR1
 177 0054 00040000 		.word	.LANCHOR2+1024
 178 0058 00000000 		.word	.LANCHOR3
 179 005c 00000000 		.word	.LANCHOR4
 180              		.cfi_endproc
 181              	.LFE168:
 183              		.section	.text.udp_receive_callback,"ax",%progbits
 184              		.align	1
 185              		.global	udp_receive_callback
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	udp_receive_callback:
 191              	.LVL12:
 192              	.LFB173:
 123:Core/Src/main.c **** ///
 124:Core/Src/main.c **** ///
 125:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc) {
 126:Core/Src/main.c **** 	// __NOP();
 127:Core/Src/main.c **** 	// return;
 128:Core/Src/main.c **** 	if (hadc->Instance == ADC1) {
 129:Core/Src/main.c **** 	  udpClient_send1();
 130:Core/Src/main.c **** 	}
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** ///
 133:Core/Src/main.c **** ///
 134:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {
 135:Core/Src/main.c **** //	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7); //LED_BLUE
 136:Core/Src/main.c **** // __NOP();
 137:Core/Src/main.c **** 	if (hadc->Instance == ADC1) {
 138:Core/Src/main.c **** 	  udpClient_send2();
 139:Core/Src/main.c **** 	}
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** ///
 142:Core/Src/main.c **** ///
 143:Core/Src/main.c **** // void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 144:Core/Src/main.c **** // 	if (htim->Instance == TIM1) {
 145:Core/Src/main.c **** // 	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10); //PC10_out
 146:Core/Src/main.c **** // 		// HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0); //LED_GREEN
 147:Core/Src/main.c **** // 	  // HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7); //LED_BLUE
 148:Core/Src/main.c **** // //		__NOP();
 149:Core/Src/main.c **** // 	}
 150:Core/Src/main.c **** // }
 151:Core/Src/main.c **** ///
 152:Core/Src/main.c **** ///
 153:Core/Src/main.c **** void HAL_ADC_ErrorCallback (ADC_HandleTypeDef * hadc) {
 154:Core/Src/main.c ****   APP_ERROR_CODE = 16;
 155:Core/Src/main.c ****   HAL_ADC_Stop_DMA(&hadc1);
ARM GAS  /tmp/cc3SeI2V.s 			page 7


 156:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buf, ADC_BUF_LEN);
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** ///
 159:Core/Src/main.c **** ///
 160:Core/Src/main.c **** void ADC_DMAError (DMA_HandleTypeDef * hdma) {
 161:Core/Src/main.c ****   APP_ERROR_CODE = 32;
 162:Core/Src/main.c ****   HAL_ADC_Stop_DMA(&hadc1);
 163:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buf, ADC_BUF_LEN);
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** ///
 166:Core/Src/main.c **** ///
 167:Core/Src/main.c **** void udp_receive_callback(void *arg, struct udp_pcb *upcb, struct pbuf *p, const ip_addr_t *addr, u
 193              		.loc 1 167 111 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 4, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		.loc 1 167 111 is_stmt 0 view .LVU35
 198 0000 08B5     		push	{r3, lr}
 199              	.LCFI2:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 3, -8
 202              		.cfi_offset 14, -4
 168:Core/Src/main.c **** 	/* Copy the data from the pbuf */
 169:Core/Src/main.c **** //	strncpy (buffer, (char *)p->payload, p->len);
 170:Core/Src/main.c **** 	/*increment message count */
 171:Core/Src/main.c **** //	counter++;
 172:Core/Src/main.c **** 	/* Free receive pbuf */
 173:Core/Src/main.c **** 	pbuf_free(p);
 203              		.loc 1 173 2 is_stmt 1 view .LVU36
 204 0002 1046     		mov	r0, r2
 205              	.LVL13:
 206              		.loc 1 173 2 is_stmt 0 view .LVU37
 207 0004 FFF7FEFF 		bl	pbuf_free
 208              	.LVL14:
 174:Core/Src/main.c **** }
 209              		.loc 1 174 1 view .LVU38
 210 0008 08BD     		pop	{r3, pc}
 211              		.loc 1 174 1 view .LVU39
 212              		.cfi_endproc
 213              	.LFE173:
 215              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 216              		.align	1
 217              		.global	HAL_ADC_ConvHalfCpltCallback
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 222              	HAL_ADC_ConvHalfCpltCallback:
 223              	.LVL15:
 224              	.LFB169:
 125:Core/Src/main.c **** 	// __NOP();
 225              		.loc 1 125 60 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 125:Core/Src/main.c **** 	// __NOP();
 229              		.loc 1 125 60 is_stmt 0 view .LVU41
 230 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc3SeI2V.s 			page 8


 231              	.LCFI3:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 128:Core/Src/main.c **** 	  udpClient_send1();
 235              		.loc 1 128 2 is_stmt 1 view .LVU42
 128:Core/Src/main.c **** 	  udpClient_send1();
 236              		.loc 1 128 10 is_stmt 0 view .LVU43
 237 0002 0268     		ldr	r2, [r0]
 128:Core/Src/main.c **** 	  udpClient_send1();
 238              		.loc 1 128 5 view .LVU44
 239 0004 034B     		ldr	r3, .L17
 240 0006 9A42     		cmp	r2, r3
 241 0008 00D0     		beq	.L16
 242              	.LVL16:
 243              	.L13:
 131:Core/Src/main.c **** ///
 244              		.loc 1 131 1 view .LVU45
 245 000a 08BD     		pop	{r3, pc}
 246              	.LVL17:
 247              	.L16:
 129:Core/Src/main.c **** 	}
 248              		.loc 1 129 4 is_stmt 1 view .LVU46
 249 000c FFF7FEFF 		bl	udpClient_send1
 250              	.LVL18:
 131:Core/Src/main.c **** ///
 251              		.loc 1 131 1 is_stmt 0 view .LVU47
 252 0010 FBE7     		b	.L13
 253              	.L18:
 254 0012 00BF     		.align	2
 255              	.L17:
 256 0014 00200140 		.word	1073815552
 257              		.cfi_endproc
 258              	.LFE169:
 260              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 261              		.align	1
 262              		.global	HAL_ADC_ConvCpltCallback
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 267              	HAL_ADC_ConvCpltCallback:
 268              	.LVL19:
 269              	.LFB170:
 134:Core/Src/main.c **** //	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7); //LED_BLUE
 270              		.loc 1 134 56 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Core/Src/main.c **** //	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7); //LED_BLUE
 274              		.loc 1 134 56 is_stmt 0 view .LVU49
 275 0000 08B5     		push	{r3, lr}
 276              	.LCFI4:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 3, -8
 279              		.cfi_offset 14, -4
 137:Core/Src/main.c **** 	  udpClient_send2();
 280              		.loc 1 137 2 is_stmt 1 view .LVU50
ARM GAS  /tmp/cc3SeI2V.s 			page 9


 137:Core/Src/main.c **** 	  udpClient_send2();
 281              		.loc 1 137 10 is_stmt 0 view .LVU51
 282 0002 0268     		ldr	r2, [r0]
 137:Core/Src/main.c **** 	  udpClient_send2();
 283              		.loc 1 137 5 view .LVU52
 284 0004 034B     		ldr	r3, .L23
 285 0006 9A42     		cmp	r2, r3
 286 0008 00D0     		beq	.L22
 287              	.LVL20:
 288              	.L19:
 140:Core/Src/main.c **** ///
 289              		.loc 1 140 1 view .LVU53
 290 000a 08BD     		pop	{r3, pc}
 291              	.LVL21:
 292              	.L22:
 138:Core/Src/main.c **** 	}
 293              		.loc 1 138 4 is_stmt 1 view .LVU54
 294 000c FFF7FEFF 		bl	udpClient_send2
 295              	.LVL22:
 140:Core/Src/main.c **** ///
 296              		.loc 1 140 1 is_stmt 0 view .LVU55
 297 0010 FBE7     		b	.L19
 298              	.L24:
 299 0012 00BF     		.align	2
 300              	.L23:
 301 0014 00200140 		.word	1073815552
 302              		.cfi_endproc
 303              	.LFE170:
 305              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 306              		.align	1
 307              		.global	HAL_ADC_ErrorCallback
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	HAL_ADC_ErrorCallback:
 313              	.LVL23:
 314              	.LFB171:
 153:Core/Src/main.c ****   APP_ERROR_CODE = 16;
 315              		.loc 1 153 55 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 153:Core/Src/main.c ****   APP_ERROR_CODE = 16;
 319              		.loc 1 153 55 is_stmt 0 view .LVU57
 320 0000 10B5     		push	{r4, lr}
 321              	.LCFI5:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 154:Core/Src/main.c ****   HAL_ADC_Stop_DMA(&hadc1);
 325              		.loc 1 154 3 is_stmt 1 view .LVU58
 154:Core/Src/main.c ****   HAL_ADC_Stop_DMA(&hadc1);
 326              		.loc 1 154 18 is_stmt 0 view .LVU59
 327 0002 074B     		ldr	r3, .L27
 328 0004 1022     		movs	r2, #16
 329 0006 1A60     		str	r2, [r3]
 155:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buf, ADC_BUF_LEN);
ARM GAS  /tmp/cc3SeI2V.s 			page 10


 330              		.loc 1 155 3 is_stmt 1 view .LVU60
 331 0008 064C     		ldr	r4, .L27+4
 332 000a 2046     		mov	r0, r4
 333              	.LVL24:
 155:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buf, ADC_BUF_LEN);
 334              		.loc 1 155 3 is_stmt 0 view .LVU61
 335 000c FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 336              	.LVL25:
 156:Core/Src/main.c **** }
 337              		.loc 1 156 3 is_stmt 1 view .LVU62
 338 0010 4FF48062 		mov	r2, #1024
 339 0014 0449     		ldr	r1, .L27+8
 340 0016 2046     		mov	r0, r4
 341 0018 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 342              	.LVL26:
 157:Core/Src/main.c **** ///
 343              		.loc 1 157 1 is_stmt 0 view .LVU63
 344 001c 10BD     		pop	{r4, pc}
 345              	.L28:
 346 001e 00BF     		.align	2
 347              	.L27:
 348 0020 00000000 		.word	.LANCHOR4
 349 0024 00000000 		.word	hadc1
 350 0028 00000000 		.word	.LANCHOR2
 351              		.cfi_endproc
 352              	.LFE171:
 354              		.section	.text.ADC_DMAError,"ax",%progbits
 355              		.align	1
 356              		.global	ADC_DMAError
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	ADC_DMAError:
 362              	.LVL27:
 363              	.LFB172:
 160:Core/Src/main.c ****   APP_ERROR_CODE = 32;
 364              		.loc 1 160 46 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 160:Core/Src/main.c ****   APP_ERROR_CODE = 32;
 368              		.loc 1 160 46 is_stmt 0 view .LVU65
 369 0000 10B5     		push	{r4, lr}
 370              	.LCFI6:
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 4, -8
 373              		.cfi_offset 14, -4
 161:Core/Src/main.c ****   HAL_ADC_Stop_DMA(&hadc1);
 374              		.loc 1 161 3 is_stmt 1 view .LVU66
 161:Core/Src/main.c ****   HAL_ADC_Stop_DMA(&hadc1);
 375              		.loc 1 161 18 is_stmt 0 view .LVU67
 376 0002 074B     		ldr	r3, .L31
 377 0004 2022     		movs	r2, #32
 378 0006 1A60     		str	r2, [r3]
 162:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buf, ADC_BUF_LEN);
 379              		.loc 1 162 3 is_stmt 1 view .LVU68
 380 0008 064C     		ldr	r4, .L31+4
ARM GAS  /tmp/cc3SeI2V.s 			page 11


 381 000a 2046     		mov	r0, r4
 382              	.LVL28:
 162:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buf, ADC_BUF_LEN);
 383              		.loc 1 162 3 is_stmt 0 view .LVU69
 384 000c FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 385              	.LVL29:
 163:Core/Src/main.c **** }
 386              		.loc 1 163 3 is_stmt 1 view .LVU70
 387 0010 4FF48062 		mov	r2, #1024
 388 0014 0449     		ldr	r1, .L31+8
 389 0016 2046     		mov	r0, r4
 390 0018 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 391              	.LVL30:
 164:Core/Src/main.c **** ///
 392              		.loc 1 164 1 is_stmt 0 view .LVU71
 393 001c 10BD     		pop	{r4, pc}
 394              	.L32:
 395 001e 00BF     		.align	2
 396              	.L31:
 397 0020 00000000 		.word	.LANCHOR4
 398 0024 00000000 		.word	hadc1
 399 0028 00000000 		.word	.LANCHOR2
 400              		.cfi_endproc
 401              	.LFE172:
 403              		.section	.text.udpClient_connect,"ax",%progbits
 404              		.align	1
 405              		.global	udpClient_connect
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	udpClient_connect:
 411              	.LFB174:
 175:Core/Src/main.c **** ///
 176:Core/Src/main.c **** ///
 177:Core/Src/main.c **** void udpClient_connect(void) {
 412              		.loc 1 177 30 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 421 0002 82B0     		sub	sp, sp, #8
 422              	.LCFI8:
 423              		.cfi_def_cfa_offset 16
 178:Core/Src/main.c **** 	err_t err;
 424              		.loc 1 178 2 view .LVU73
 179:Core/Src/main.c **** 	/* 1. Create a new UDP control block  */
 180:Core/Src/main.c **** 	upcb = udp_new();
 425              		.loc 1 180 2 view .LVU74
 426              		.loc 1 180 9 is_stmt 0 view .LVU75
 427 0004 FFF7FEFF 		bl	udp_new
 428              	.LVL31:
 429              		.loc 1 180 7 view .LVU76
 430 0008 0C4C     		ldr	r4, .L37
ARM GAS  /tmp/cc3SeI2V.s 			page 12


 431 000a 2060     		str	r0, [r4]
 181:Core/Src/main.c **** 	/* Bind the block to module's IP and port */
 182:Core/Src/main.c **** 	ip_addr_t myIPaddr;
 432              		.loc 1 182 2 is_stmt 1 view .LVU77
 183:Core/Src/main.c **** 	IP_ADDR4(&myIPaddr, 192, 168, 120, 173);
 433              		.loc 1 183 2 view .LVU78
 434 000c 0C4B     		ldr	r3, .L37+4
 435 000e 0193     		str	r3, [sp, #4]
 184:Core/Src/main.c **** 	u16_t udpPort = 15180;
 436              		.loc 1 184 2 view .LVU79
 437              	.LVL32:
 185:Core/Src/main.c **** 	udp_bind(upcb, &myIPaddr, udpPort);
 438              		.loc 1 185 2 view .LVU80
 439 0010 43F64C32 		movw	r2, #15180
 440 0014 01A9     		add	r1, sp, #4
 441 0016 FFF7FEFF 		bl	udp_bind
 442              	.LVL33:
 186:Core/Src/main.c **** 	/* configure destination IP address and port */
 187:Core/Src/main.c **** 	ip_addr_t DestIPaddr;
 443              		.loc 1 187 2 view .LVU81
 188:Core/Src/main.c **** 	IP_ADDR4(&DestIPaddr, 192, 168, 120, 172);
 444              		.loc 1 188 2 view .LVU82
 445 001a 0A4B     		ldr	r3, .L37+8
 446 001c 0093     		str	r3, [sp]
 189:Core/Src/main.c **** 	err= udp_connect(upcb, &DestIPaddr, udpPort);
 447              		.loc 1 189 2 view .LVU83
 448              		.loc 1 189 7 is_stmt 0 view .LVU84
 449 001e 43F64C32 		movw	r2, #15180
 450 0022 6946     		mov	r1, sp
 451 0024 2068     		ldr	r0, [r4]
 452 0026 FFF7FEFF 		bl	udp_connect
 453              	.LVL34:
 190:Core/Src/main.c **** 	if (err == ERR_OK) {
 454              		.loc 1 190 2 is_stmt 1 view .LVU85
 455              		.loc 1 190 5 is_stmt 0 view .LVU86
 456 002a 08B1     		cbz	r0, .L36
 457              	.LVL35:
 458              	.L33:
 191:Core/Src/main.c **** 		/* 2. Send message to server */
 192:Core/Src/main.c **** 		// udpClient_send();
 193:Core/Src/main.c **** 		/* 3. Set a receive callback for the upcb */
 194:Core/Src/main.c **** 		udp_recv(upcb, udp_receive_callback, NULL);
 195:Core/Src/main.c **** 	}
 196:Core/Src/main.c **** }
 459              		.loc 1 196 1 view .LVU87
 460 002c 02B0     		add	sp, sp, #8
 461              	.LCFI9:
 462              		.cfi_remember_state
 463              		.cfi_def_cfa_offset 8
 464              		@ sp needed
 465 002e 10BD     		pop	{r4, pc}
 466              	.LVL36:
 467              	.L36:
 468              	.LCFI10:
 469              		.cfi_restore_state
 194:Core/Src/main.c **** 	}
 470              		.loc 1 194 3 is_stmt 1 view .LVU88
ARM GAS  /tmp/cc3SeI2V.s 			page 13


 471 0030 0022     		movs	r2, #0
 472 0032 0549     		ldr	r1, .L37+12
 473 0034 2068     		ldr	r0, [r4]
 474              	.LVL37:
 194:Core/Src/main.c **** 	}
 475              		.loc 1 194 3 is_stmt 0 view .LVU89
 476 0036 FFF7FEFF 		bl	udp_recv
 477              	.LVL38:
 478              		.loc 1 196 1 view .LVU90
 479 003a F7E7     		b	.L33
 480              	.L38:
 481              		.align	2
 482              	.L37:
 483 003c 00000000 		.word	.LANCHOR3
 484 0040 C0A878AD 		.word	-1384601408
 485 0044 C0A878AC 		.word	-1401378624
 486 0048 00000000 		.word	udp_receive_callback
 487              		.cfi_endproc
 488              	.LFE174:
 490              		.section	.text.testLeds,"ax",%progbits
 491              		.align	1
 492              		.global	testLeds
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	testLeds:
 498              	.LVL39:
 499              	.LFB175:
 197:Core/Src/main.c **** ///
 198:Core/Src/main.c **** ///
 199:Core/Src/main.c **** void testLeds(int count) {
 500              		.loc 1 199 26 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		.loc 1 199 26 is_stmt 0 view .LVU92
 505 0000 70B5     		push	{r4, r5, r6, lr}
 506              	.LCFI11:
 507              		.cfi_def_cfa_offset 16
 508              		.cfi_offset 4, -16
 509              		.cfi_offset 5, -12
 510              		.cfi_offset 6, -8
 511              		.cfi_offset 14, -4
 200:Core/Src/main.c ****   if (count <= 0) {count = 1;};
 512              		.loc 1 200 3 is_stmt 1 view .LVU93
 513              		.loc 1 200 6 is_stmt 0 view .LVU94
 514 0002 061E     		subs	r6, r0, #0
 515 0004 01DD     		ble	.L45
 516              	.L40:
 517              	.LVL40:
 518              		.loc 1 200 31 is_stmt 1 discriminator 3 view .LVU95
 201:Core/Src/main.c ****   int duration = 24;  // milles
 519              		.loc 1 201 3 discriminator 3 view .LVU96
 202:Core/Src/main.c ****   for (uint16_t i = 0; i < count; i++) {
 520              		.loc 1 202 3 discriminator 3 view .LVU97
 521              	.LBB26:
 522              		.loc 1 202 8 discriminator 3 view .LVU98
ARM GAS  /tmp/cc3SeI2V.s 			page 14


 523              		.loc 1 202 17 is_stmt 0 discriminator 3 view .LVU99
 524 0006 0025     		movs	r5, #0
 525              		.loc 1 202 3 discriminator 3 view .LVU100
 526 0008 27E0     		b	.L41
 527              	.LVL41:
 528              	.L45:
 529              		.loc 1 202 3 discriminator 3 view .LVU101
 530              	.LBE26:
 200:Core/Src/main.c ****   if (count <= 0) {count = 1;};
 531              		.loc 1 200 26 view .LVU102
 532 000a 0126     		movs	r6, #1
 533 000c FBE7     		b	.L40
 534              	.LVL42:
 535              	.L42:
 536              	.LBB27:
 203:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 537              		.loc 1 203 5 is_stmt 1 discriminator 3 view .LVU103
 538 000e 144C     		ldr	r4, .L46
 539 0010 4FF48041 		mov	r1, #16384
 540 0014 2046     		mov	r0, r4
 541 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 542              	.LVL43:
 204:Core/Src/main.c ****     HAL_Delay(duration);
 543              		.loc 1 204 5 discriminator 3 view .LVU104
 544 001a 1820     		movs	r0, #24
 545 001c FFF7FEFF 		bl	HAL_Delay
 546              	.LVL44:
 205:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 547              		.loc 1 205 5 discriminator 3 view .LVU105
 548 0020 4FF48041 		mov	r1, #16384
 549 0024 2046     		mov	r0, r4
 550 0026 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 551              	.LVL45:
 206:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 552              		.loc 1 206 5 discriminator 3 view .LVU106
 553 002a 8021     		movs	r1, #128
 554 002c 2046     		mov	r0, r4
 555 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 556              	.LVL46:
 207:Core/Src/main.c ****     HAL_Delay(duration);
 557              		.loc 1 207 5 discriminator 3 view .LVU107
 558 0032 1820     		movs	r0, #24
 559 0034 FFF7FEFF 		bl	HAL_Delay
 560              	.LVL47:
 208:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 561              		.loc 1 208 5 discriminator 3 view .LVU108
 562 0038 8021     		movs	r1, #128
 563 003a 2046     		mov	r0, r4
 564 003c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 565              	.LVL48:
 209:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 566              		.loc 1 209 5 discriminator 3 view .LVU109
 567 0040 0121     		movs	r1, #1
 568 0042 2046     		mov	r0, r4
 569 0044 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 570              	.LVL49:
 210:Core/Src/main.c ****     HAL_Delay(duration);
ARM GAS  /tmp/cc3SeI2V.s 			page 15


 571              		.loc 1 210 5 discriminator 3 view .LVU110
 572 0048 1820     		movs	r0, #24
 573 004a FFF7FEFF 		bl	HAL_Delay
 574              	.LVL50:
 211:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 575              		.loc 1 211 5 discriminator 3 view .LVU111
 576 004e 0121     		movs	r1, #1
 577 0050 2046     		mov	r0, r4
 578 0052 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 579              	.LVL51:
 202:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 580              		.loc 1 202 35 discriminator 3 view .LVU112
 202:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 581              		.loc 1 202 36 is_stmt 0 discriminator 3 view .LVU113
 582 0056 0135     		adds	r5, r5, #1
 583              	.LVL52:
 202:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 584              		.loc 1 202 36 discriminator 3 view .LVU114
 585 0058 ADB2     		uxth	r5, r5
 586              	.LVL53:
 587              	.L41:
 202:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 588              		.loc 1 202 24 is_stmt 1 discriminator 1 view .LVU115
 202:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 589              		.loc 1 202 3 is_stmt 0 discriminator 1 view .LVU116
 590 005a B542     		cmp	r5, r6
 591 005c D7DB     		blt	.L42
 592              	.LBE27:
 212:Core/Src/main.c ****   }
 213:Core/Src/main.c **** }
 593              		.loc 1 213 1 view .LVU117
 594 005e 70BD     		pop	{r4, r5, r6, pc}
 595              	.LVL54:
 596              	.L47:
 597              		.loc 1 213 1 view .LVU118
 598              		.align	2
 599              	.L46:
 600 0060 00040240 		.word	1073873920
 601              		.cfi_endproc
 602              	.LFE175:
 604              		.section	.text.errorLeds,"ax",%progbits
 605              		.align	1
 606              		.global	errorLeds
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 611              	errorLeds:
 612              	.LVL55:
 613              	.LFB176:
 214:Core/Src/main.c **** ///
 215:Core/Src/main.c **** ///
 216:Core/Src/main.c **** void errorLeds(int err) {
 614              		.loc 1 216 25 is_stmt 1 view -0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		.loc 1 216 25 is_stmt 0 view .LVU120
ARM GAS  /tmp/cc3SeI2V.s 			page 16


 619 0000 70B5     		push	{r4, r5, r6, lr}
 620              	.LCFI12:
 621              		.cfi_def_cfa_offset 16
 622              		.cfi_offset 4, -16
 623              		.cfi_offset 5, -12
 624              		.cfi_offset 6, -8
 625              		.cfi_offset 14, -4
 626 0002 0446     		mov	r4, r0
 217:Core/Src/main.c ****   int count = 2;
 627              		.loc 1 217 3 is_stmt 1 view .LVU121
 628              	.LVL56:
 218:Core/Src/main.c ****   int duration = 24;  // milles
 629              		.loc 1 218 3 view .LVU122
 219:Core/Src/main.c ****   // ERROR
 220:Core/Src/main.c ****   if (err > 0 && err <= 15) {
 630              		.loc 1 220 3 view .LVU123
 631              		.loc 1 220 15 is_stmt 0 view .LVU124
 632 0004 431E     		subs	r3, r0, #1
 633              		.loc 1 220 6 view .LVU125
 634 0006 0E2B     		cmp	r3, #14
 635 0008 18D9     		bls	.L61
 636              	.LVL57:
 637              	.L50:
 221:Core/Src/main.c ****     for (uint16_t i = 0; i < count; i++) {
 222:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 223:Core/Src/main.c ****       HAL_Delay(duration);
 224:Core/Src/main.c ****     }
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   // WARNING
 227:Core/Src/main.c ****   if (err > 15 && err <= 31) {
 638              		.loc 1 227 3 is_stmt 1 view .LVU126
 639              		.loc 1 227 16 is_stmt 0 view .LVU127
 640 000a A4F11003 		sub	r3, r4, #16
 641              		.loc 1 227 6 view .LVU128
 642 000e 0F2B     		cmp	r3, #15
 643 0010 28D9     		bls	.L62
 644              	.L53:
 228:Core/Src/main.c ****     for (uint16_t i = 0; i < count; i++) {
 229:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 230:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 231:Core/Src/main.c ****       HAL_Delay(duration);
 232:Core/Src/main.c ****     }
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   // INFO1
 235:Core/Src/main.c ****   if (err > 31 && err <= 63) {
 645              		.loc 1 235 3 is_stmt 1 view .LVU129
 646              		.loc 1 235 16 is_stmt 0 view .LVU130
 647 0012 A4F12003 		sub	r3, r4, #32
 648              		.loc 1 235 6 view .LVU131
 649 0016 1F2B     		cmp	r3, #31
 650 0018 32D9     		bls	.L63
 651              	.L56:
 236:Core/Src/main.c ****     for (uint16_t i = 0; i < count; i++) {
 237:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 238:Core/Src/main.c ****       HAL_Delay(duration);
 239:Core/Src/main.c ****     }
 240:Core/Src/main.c ****   }
ARM GAS  /tmp/cc3SeI2V.s 			page 17


 241:Core/Src/main.c ****   // INFO2
 242:Core/Src/main.c ****   if (err > 63 && err <= 127) {
 652              		.loc 1 242 3 is_stmt 1 view .LVU132
 653              		.loc 1 242 16 is_stmt 0 view .LVU133
 654 001a 403C     		subs	r4, r4, #64
 655              	.LVL58:
 656              		.loc 1 242 6 view .LVU134
 657 001c 3F2C     		cmp	r4, #63
 658 001e 3DD9     		bls	.L64
 659              	.LVL59:
 660              	.L48:
 243:Core/Src/main.c ****     for (uint16_t i = 0; i < count; i++) {
 244:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 245:Core/Src/main.c ****       HAL_Delay(duration);
 246:Core/Src/main.c ****     }
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c **** }
 661              		.loc 1 248 1 view .LVU135
 662 0020 70BD     		pop	{r4, r5, r6, pc}
 663              	.LVL60:
 664              	.L51:
 665              	.LBB28:
 222:Core/Src/main.c ****       HAL_Delay(duration);
 666              		.loc 1 222 7 is_stmt 1 discriminator 3 view .LVU136
 667 0022 4FF48041 		mov	r1, #16384
 668 0026 1E48     		ldr	r0, .L66
 669 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 670              	.LVL61:
 223:Core/Src/main.c ****     }
 671              		.loc 1 223 7 discriminator 3 view .LVU137
 672 002c 1820     		movs	r0, #24
 673 002e FFF7FEFF 		bl	HAL_Delay
 674              	.LVL62:
 221:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 675              		.loc 1 221 37 discriminator 3 view .LVU138
 221:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 676              		.loc 1 221 38 is_stmt 0 discriminator 3 view .LVU139
 677 0032 0135     		adds	r5, r5, #1
 678              	.LVL63:
 221:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 679              		.loc 1 221 38 discriminator 3 view .LVU140
 680 0034 ADB2     		uxth	r5, r5
 681              	.LVL64:
 682              	.L49:
 221:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 683              		.loc 1 221 26 is_stmt 1 discriminator 1 view .LVU141
 221:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 684              		.loc 1 221 5 is_stmt 0 discriminator 1 view .LVU142
 685 0036 012D     		cmp	r5, #1
 686 0038 F3D9     		bls	.L51
 687 003a E6E7     		b	.L50
 688              	.LVL65:
 689              	.L61:
 221:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 690              		.loc 1 221 19 view .LVU143
 691 003c 0025     		movs	r5, #0
 692 003e FAE7     		b	.L49
ARM GAS  /tmp/cc3SeI2V.s 			page 18


 693              	.LVL66:
 694              	.L54:
 221:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 695              		.loc 1 221 19 view .LVU144
 696              	.LBE28:
 697              	.LBB29:
 229:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 698              		.loc 1 229 7 is_stmt 1 discriminator 3 view .LVU145
 699 0040 174E     		ldr	r6, .L66
 700 0042 4FF48041 		mov	r1, #16384
 701 0046 3046     		mov	r0, r6
 702 0048 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 703              	.LVL67:
 230:Core/Src/main.c ****       HAL_Delay(duration);
 704              		.loc 1 230 7 discriminator 3 view .LVU146
 705 004c 8021     		movs	r1, #128
 706 004e 3046     		mov	r0, r6
 707 0050 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 708              	.LVL68:
 231:Core/Src/main.c ****     }
 709              		.loc 1 231 7 discriminator 3 view .LVU147
 710 0054 1820     		movs	r0, #24
 711 0056 FFF7FEFF 		bl	HAL_Delay
 712              	.LVL69:
 228:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 713              		.loc 1 228 37 discriminator 3 view .LVU148
 228:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 714              		.loc 1 228 38 is_stmt 0 discriminator 3 view .LVU149
 715 005a 0135     		adds	r5, r5, #1
 716              	.LVL70:
 228:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 717              		.loc 1 228 38 discriminator 3 view .LVU150
 718 005c ADB2     		uxth	r5, r5
 719              	.LVL71:
 720              	.L52:
 228:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 721              		.loc 1 228 26 is_stmt 1 discriminator 1 view .LVU151
 228:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 722              		.loc 1 228 5 is_stmt 0 discriminator 1 view .LVU152
 723 005e 012D     		cmp	r5, #1
 724 0060 EED9     		bls	.L54
 725 0062 D6E7     		b	.L53
 726              	.LVL72:
 727              	.L62:
 228:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 728              		.loc 1 228 19 view .LVU153
 729 0064 0025     		movs	r5, #0
 730 0066 FAE7     		b	.L52
 731              	.LVL73:
 732              	.L57:
 228:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 733              		.loc 1 228 19 view .LVU154
 734              	.LBE29:
 735              	.LBB30:
 237:Core/Src/main.c ****       HAL_Delay(duration);
 736              		.loc 1 237 7 is_stmt 1 discriminator 3 view .LVU155
 737 0068 8021     		movs	r1, #128
ARM GAS  /tmp/cc3SeI2V.s 			page 19


 738 006a 0D48     		ldr	r0, .L66
 739 006c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 740              	.LVL74:
 238:Core/Src/main.c ****     }
 741              		.loc 1 238 7 discriminator 3 view .LVU156
 742 0070 1820     		movs	r0, #24
 743 0072 FFF7FEFF 		bl	HAL_Delay
 744              	.LVL75:
 236:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 745              		.loc 1 236 37 discriminator 3 view .LVU157
 236:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 746              		.loc 1 236 38 is_stmt 0 discriminator 3 view .LVU158
 747 0076 0135     		adds	r5, r5, #1
 748              	.LVL76:
 236:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 749              		.loc 1 236 38 discriminator 3 view .LVU159
 750 0078 ADB2     		uxth	r5, r5
 751              	.LVL77:
 752              	.L55:
 236:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 753              		.loc 1 236 26 is_stmt 1 discriminator 1 view .LVU160
 236:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 754              		.loc 1 236 5 is_stmt 0 discriminator 1 view .LVU161
 755 007a 012D     		cmp	r5, #1
 756 007c F4D9     		bls	.L57
 757 007e CCE7     		b	.L56
 758              	.LVL78:
 759              	.L63:
 236:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 760              		.loc 1 236 19 view .LVU162
 761 0080 0025     		movs	r5, #0
 762 0082 FAE7     		b	.L55
 763              	.LVL79:
 764              	.L60:
 236:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);  //LED_BLUE
 765              		.loc 1 236 19 view .LVU163
 766              	.LBE30:
 767              	.LBB31:
 244:Core/Src/main.c ****       HAL_Delay(duration);
 768              		.loc 1 244 7 is_stmt 1 discriminator 3 view .LVU164
 769 0084 0121     		movs	r1, #1
 770 0086 0648     		ldr	r0, .L66
 771 0088 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 772              	.LVL80:
 245:Core/Src/main.c ****     }
 773              		.loc 1 245 7 discriminator 3 view .LVU165
 774 008c 1820     		movs	r0, #24
 775 008e FFF7FEFF 		bl	HAL_Delay
 776              	.LVL81:
 243:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 777              		.loc 1 243 37 discriminator 3 view .LVU166
 243:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 778              		.loc 1 243 38 is_stmt 0 discriminator 3 view .LVU167
 779 0092 0134     		adds	r4, r4, #1
 780              	.LVL82:
 243:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 781              		.loc 1 243 38 discriminator 3 view .LVU168
ARM GAS  /tmp/cc3SeI2V.s 			page 20


 782 0094 A4B2     		uxth	r4, r4
 783              	.LVL83:
 784              	.L58:
 243:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 785              		.loc 1 243 26 is_stmt 1 discriminator 1 view .LVU169
 243:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 786              		.loc 1 243 5 is_stmt 0 discriminator 1 view .LVU170
 787 0096 012C     		cmp	r4, #1
 788 0098 F4D9     		bls	.L60
 789 009a C1E7     		b	.L48
 790              	.LVL84:
 791              	.L64:
 243:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);  //LED_GREEN
 792              		.loc 1 243 19 view .LVU171
 793 009c 0024     		movs	r4, #0
 794 009e FAE7     		b	.L58
 795              	.L67:
 796              		.align	2
 797              	.L66:
 798 00a0 00040240 		.word	1073873920
 799              	.LBE31:
 800              		.cfi_endproc
 801              	.LFE176:
 803              		.section	.text.handleError,"ax",%progbits
 804              		.align	1
 805              		.global	handleError
 806              		.syntax unified
 807              		.thumb
 808              		.thumb_func
 810              	handleError:
 811              	.LFB177:
 249:Core/Src/main.c **** ///
 250:Core/Src/main.c **** ///
 251:Core/Src/main.c **** void handleError() {
 812              		.loc 1 251 20 is_stmt 1 view -0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816 0000 08B5     		push	{r3, lr}
 817              	.LCFI13:
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 3, -8
 820              		.cfi_offset 14, -4
 252:Core/Src/main.c ****   int e = APP_ERROR_CODE;
 821              		.loc 1 252 3 view .LVU173
 822              		.loc 1 252 7 is_stmt 0 view .LVU174
 823 0002 034B     		ldr	r3, .L70
 824 0004 1868     		ldr	r0, [r3]
 825              	.LVL85:
 253:Core/Src/main.c ****   APP_ERROR_CODE = 0;
 826              		.loc 1 253 3 is_stmt 1 view .LVU175
 827              		.loc 1 253 18 is_stmt 0 view .LVU176
 828 0006 0022     		movs	r2, #0
 829 0008 1A60     		str	r2, [r3]
 254:Core/Src/main.c ****   errorLeds(e);
 830              		.loc 1 254 3 is_stmt 1 view .LVU177
 831 000a FFF7FEFF 		bl	errorLeds
ARM GAS  /tmp/cc3SeI2V.s 			page 21


 832              	.LVL86:
 255:Core/Src/main.c **** }
 833              		.loc 1 255 1 is_stmt 0 view .LVU178
 834 000e 08BD     		pop	{r3, pc}
 835              	.L71:
 836              		.align	2
 837              	.L70:
 838 0010 00000000 		.word	.LANCHOR4
 839              		.cfi_endproc
 840              	.LFE177:
 842              		.section	.text.Error_Handler,"ax",%progbits
 843              		.align	1
 844              		.global	Error_Handler
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 849              	Error_Handler:
 850              	.LFB180:
 256:Core/Src/main.c **** /* USER CODE END 0 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
 259:Core/Src/main.c ****   * @brief  The application entry point.
 260:Core/Src/main.c ****   * @retval int
 261:Core/Src/main.c ****   */
 262:Core/Src/main.c **** int main(void)
 263:Core/Src/main.c **** {
 264:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 265:Core/Src/main.c ****   /* USER CODE END 1 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* Enable I-Cache---------------------------------------------------------*/
 268:Core/Src/main.c ****   SCB_EnableICache();
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* Enable D-Cache---------------------------------------------------------*/
 271:Core/Src/main.c ****   SCB_EnableDCache();
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 276:Core/Src/main.c ****   HAL_Init();
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 279:Core/Src/main.c ****   /* USER CODE END Init */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* Configure the system clock */
 282:Core/Src/main.c ****   SystemClock_Config();
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END SysInit */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* Initialize all configured peripherals */
 289:Core/Src/main.c ****   MX_GPIO_Init();
 290:Core/Src/main.c ****   MX_DMA_Init();
 291:Core/Src/main.c ****   MX_ADC1_Init();
 292:Core/Src/main.c ****   MX_TIM1_Init();
 293:Core/Src/main.c ****   MX_LWIP_Init();
 294:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/cc3SeI2V.s 			page 22


 295:Core/Src/main.c ****   testLeds(2);
 296:Core/Src/main.c ****   udpClient_connect();
 297:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 298:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buf, ADC_BUF_LEN);
 299:Core/Src/main.c ****   testLeds(1);
 300:Core/Src/main.c ****   // for (uint16_t i = 0; i < ADC_BUF_LEN; i++) {
 301:Core/Src/main.c ****   //     adc_buf_test[i] = i;
 302:Core/Src/main.c ****   // }  
 303:Core/Src/main.c ****   /* USER CODE END 2 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* Infinite loop */
 306:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 307:Core/Src/main.c ****   while (1)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c **** //	  HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14); //LED_RED
 310:Core/Src/main.c ****     if (APP_ERROR_CODE > 0) {
 311:Core/Src/main.c ****       handleError();
 312:Core/Src/main.c ****     }
 313:Core/Src/main.c **** 	  ethernetif_input(&gnetif);
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** 	  sys_check_timeouts();
 316:Core/Src/main.c ****     /* USER CODE END WHILE */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 319:Core/Src/main.c ****   }
 320:Core/Src/main.c ****   /* USER CODE END 3 */
 321:Core/Src/main.c **** }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /**
 324:Core/Src/main.c ****   * @brief System Clock Configuration
 325:Core/Src/main.c ****   * @retval None
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c **** void SystemClock_Config(void)
 328:Core/Src/main.c **** {
 329:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 330:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 333:Core/Src/main.c ****   */
 334:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 335:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 338:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 339:Core/Src/main.c ****   */
 340:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 341:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 344:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 345:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 346:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 347:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 348:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 349:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cc3SeI2V.s 			page 23


 352:Core/Src/main.c ****   }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /** Activate the Over-Drive mode
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 357:Core/Src/main.c ****   {
 358:Core/Src/main.c ****     Error_Handler();
 359:Core/Src/main.c ****   }
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 362:Core/Src/main.c ****   */
 363:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 364:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 365:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 366:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 367:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 368:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 371:Core/Src/main.c ****   {
 372:Core/Src/main.c ****     Error_Handler();
 373:Core/Src/main.c ****   }
 374:Core/Src/main.c **** }
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** /* USER CODE END 4 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** /**
 381:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 382:Core/Src/main.c ****   * @retval None
 383:Core/Src/main.c ****   */
 384:Core/Src/main.c **** void Error_Handler(void)
 385:Core/Src/main.c **** {
 851              		.loc 1 385 1 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ Volatile: function does not return.
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 386:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 387:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 388:Core/Src/main.c ****   __disable_irq();
 857              		.loc 1 388 3 view .LVU180
 858              	.LBB32:
 859              	.LBI32:
 860              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /tmp/cc3SeI2V.s 			page 24


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  /tmp/cc3SeI2V.s 			page 25


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc3SeI2V.s 			page 26


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 861              		.loc 2 140 27 view .LVU181
 862              	.LBB33:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 863              		.loc 2 142 3 view .LVU182
 864              		.syntax unified
 865              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 866 0000 72B6     		cpsid i
 867              	@ 0 "" 2
 868              		.thumb
 869              		.syntax unified
 870              	.L73:
 871              	.LBE33:
 872              	.LBE32:
 389:Core/Src/main.c ****   while (1)
 873              		.loc 1 389 3 discriminator 1 view .LVU183
 390:Core/Src/main.c ****   {
 391:Core/Src/main.c ****   }
 874              		.loc 1 391 3 discriminator 1 view .LVU184
 389:Core/Src/main.c ****   while (1)
 875              		.loc 1 389 9 discriminator 1 view .LVU185
 876 0002 FEE7     		b	.L73
 877              		.cfi_endproc
 878              	.LFE180:
 880              		.section	.text.SystemClock_Config,"ax",%progbits
 881              		.align	1
 882              		.global	SystemClock_Config
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 887              	SystemClock_Config:
 888              	.LFB179:
 328:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 889              		.loc 1 328 1 view -0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 80
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893 0000 00B5     		push	{lr}
 894              	.LCFI14:
 895              		.cfi_def_cfa_offset 4
 896              		.cfi_offset 14, -4
ARM GAS  /tmp/cc3SeI2V.s 			page 27


 897 0002 95B0     		sub	sp, sp, #84
 898              	.LCFI15:
 899              		.cfi_def_cfa_offset 88
 329:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 900              		.loc 1 329 3 view .LVU187
 329:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 901              		.loc 1 329 22 is_stmt 0 view .LVU188
 902 0004 3422     		movs	r2, #52
 903 0006 0021     		movs	r1, #0
 904 0008 07A8     		add	r0, sp, #28
 905 000a FFF7FEFF 		bl	memset
 906              	.LVL87:
 330:Core/Src/main.c **** 
 907              		.loc 1 330 3 is_stmt 1 view .LVU189
 330:Core/Src/main.c **** 
 908              		.loc 1 330 22 is_stmt 0 view .LVU190
 909 000e 0023     		movs	r3, #0
 910 0010 0293     		str	r3, [sp, #8]
 911 0012 0393     		str	r3, [sp, #12]
 912 0014 0493     		str	r3, [sp, #16]
 913 0016 0593     		str	r3, [sp, #20]
 914 0018 0693     		str	r3, [sp, #24]
 334:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 915              		.loc 1 334 3 is_stmt 1 view .LVU191
 916              	.LBB34:
 334:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 917              		.loc 1 334 3 view .LVU192
 334:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 918              		.loc 1 334 3 view .LVU193
 919 001a 234B     		ldr	r3, .L82
 920 001c 1A6C     		ldr	r2, [r3, #64]
 921 001e 42F08052 		orr	r2, r2, #268435456
 922 0022 1A64     		str	r2, [r3, #64]
 334:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 923              		.loc 1 334 3 view .LVU194
 924 0024 1B6C     		ldr	r3, [r3, #64]
 925 0026 03F08053 		and	r3, r3, #268435456
 926 002a 0093     		str	r3, [sp]
 334:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 927              		.loc 1 334 3 view .LVU195
 928 002c 009B     		ldr	r3, [sp]
 929              	.LBE34:
 334:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 930              		.loc 1 334 3 view .LVU196
 335:Core/Src/main.c **** 
 931              		.loc 1 335 3 view .LVU197
 932              	.LBB35:
 335:Core/Src/main.c **** 
 933              		.loc 1 335 3 view .LVU198
 335:Core/Src/main.c **** 
 934              		.loc 1 335 3 view .LVU199
 935 002e 1F4B     		ldr	r3, .L82+4
 936 0030 1A68     		ldr	r2, [r3]
 937 0032 42F44042 		orr	r2, r2, #49152
 938 0036 1A60     		str	r2, [r3]
 335:Core/Src/main.c **** 
 939              		.loc 1 335 3 view .LVU200
ARM GAS  /tmp/cc3SeI2V.s 			page 28


 940 0038 1B68     		ldr	r3, [r3]
 941 003a 03F44043 		and	r3, r3, #49152
 942 003e 0193     		str	r3, [sp, #4]
 335:Core/Src/main.c **** 
 943              		.loc 1 335 3 view .LVU201
 944 0040 019B     		ldr	r3, [sp, #4]
 945              	.LBE35:
 335:Core/Src/main.c **** 
 946              		.loc 1 335 3 view .LVU202
 340:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 947              		.loc 1 340 3 view .LVU203
 340:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 948              		.loc 1 340 36 is_stmt 0 view .LVU204
 949 0042 0123     		movs	r3, #1
 950 0044 0793     		str	r3, [sp, #28]
 341:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 951              		.loc 1 341 3 is_stmt 1 view .LVU205
 341:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 952              		.loc 1 341 30 is_stmt 0 view .LVU206
 953 0046 4FF48033 		mov	r3, #65536
 954 004a 0893     		str	r3, [sp, #32]
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 955              		.loc 1 342 3 is_stmt 1 view .LVU207
 342:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 956              		.loc 1 342 34 is_stmt 0 view .LVU208
 957 004c 0223     		movs	r3, #2
 958 004e 0D93     		str	r3, [sp, #52]
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 959              		.loc 1 343 3 is_stmt 1 view .LVU209
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 960              		.loc 1 343 35 is_stmt 0 view .LVU210
 961 0050 4FF48002 		mov	r2, #4194304
 962 0054 0E92     		str	r2, [sp, #56]
 344:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 963              		.loc 1 344 3 is_stmt 1 view .LVU211
 344:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 964              		.loc 1 344 30 is_stmt 0 view .LVU212
 965 0056 1922     		movs	r2, #25
 966 0058 0F92     		str	r2, [sp, #60]
 345:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 967              		.loc 1 345 3 is_stmt 1 view .LVU213
 345:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 968              		.loc 1 345 30 is_stmt 0 view .LVU214
 969 005a 4FF4D872 		mov	r2, #432
 970 005e 1092     		str	r2, [sp, #64]
 346:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 971              		.loc 1 346 3 is_stmt 1 view .LVU215
 346:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 972              		.loc 1 346 30 is_stmt 0 view .LVU216
 973 0060 1193     		str	r3, [sp, #68]
 347:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 974              		.loc 1 347 3 is_stmt 1 view .LVU217
 347:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 975              		.loc 1 347 30 is_stmt 0 view .LVU218
 976 0062 1293     		str	r3, [sp, #72]
 348:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 977              		.loc 1 348 3 is_stmt 1 view .LVU219
ARM GAS  /tmp/cc3SeI2V.s 			page 29


 348:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 978              		.loc 1 348 30 is_stmt 0 view .LVU220
 979 0064 1393     		str	r3, [sp, #76]
 349:Core/Src/main.c ****   {
 980              		.loc 1 349 3 is_stmt 1 view .LVU221
 349:Core/Src/main.c ****   {
 981              		.loc 1 349 7 is_stmt 0 view .LVU222
 982 0066 07A8     		add	r0, sp, #28
 983 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 984              	.LVL88:
 349:Core/Src/main.c ****   {
 985              		.loc 1 349 6 view .LVU223
 986 006c B0B9     		cbnz	r0, .L79
 356:Core/Src/main.c ****   {
 987              		.loc 1 356 3 is_stmt 1 view .LVU224
 356:Core/Src/main.c ****   {
 988              		.loc 1 356 7 is_stmt 0 view .LVU225
 989 006e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 990              	.LVL89:
 356:Core/Src/main.c ****   {
 991              		.loc 1 356 6 view .LVU226
 992 0072 A8B9     		cbnz	r0, .L80
 363:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 993              		.loc 1 363 3 is_stmt 1 view .LVU227
 363:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 994              		.loc 1 363 31 is_stmt 0 view .LVU228
 995 0074 0F23     		movs	r3, #15
 996 0076 0293     		str	r3, [sp, #8]
 365:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 997              		.loc 1 365 3 is_stmt 1 view .LVU229
 365:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 998              		.loc 1 365 34 is_stmt 0 view .LVU230
 999 0078 0223     		movs	r3, #2
 1000 007a 0393     		str	r3, [sp, #12]
 366:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1001              		.loc 1 366 3 is_stmt 1 view .LVU231
 366:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1002              		.loc 1 366 35 is_stmt 0 view .LVU232
 1003 007c 0023     		movs	r3, #0
 1004 007e 0493     		str	r3, [sp, #16]
 367:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1005              		.loc 1 367 3 is_stmt 1 view .LVU233
 367:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1006              		.loc 1 367 36 is_stmt 0 view .LVU234
 1007 0080 4FF4A053 		mov	r3, #5120
 1008 0084 0593     		str	r3, [sp, #20]
 368:Core/Src/main.c **** 
 1009              		.loc 1 368 3 is_stmt 1 view .LVU235
 368:Core/Src/main.c **** 
 1010              		.loc 1 368 36 is_stmt 0 view .LVU236
 1011 0086 4FF48053 		mov	r3, #4096
 1012 008a 0693     		str	r3, [sp, #24]
 370:Core/Src/main.c ****   {
 1013              		.loc 1 370 3 is_stmt 1 view .LVU237
 370:Core/Src/main.c ****   {
 1014              		.loc 1 370 7 is_stmt 0 view .LVU238
 1015 008c 0721     		movs	r1, #7
ARM GAS  /tmp/cc3SeI2V.s 			page 30


 1016 008e 02A8     		add	r0, sp, #8
 1017 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1018              	.LVL90:
 370:Core/Src/main.c ****   {
 1019              		.loc 1 370 6 view .LVU239
 1020 0094 30B9     		cbnz	r0, .L81
 374:Core/Src/main.c **** 
 1021              		.loc 1 374 1 view .LVU240
 1022 0096 15B0     		add	sp, sp, #84
 1023              	.LCFI16:
 1024              		.cfi_remember_state
 1025              		.cfi_def_cfa_offset 4
 1026              		@ sp needed
 1027 0098 5DF804FB 		ldr	pc, [sp], #4
 1028              	.L79:
 1029              	.LCFI17:
 1030              		.cfi_restore_state
 351:Core/Src/main.c ****   }
 1031              		.loc 1 351 5 is_stmt 1 view .LVU241
 1032 009c FFF7FEFF 		bl	Error_Handler
 1033              	.LVL91:
 1034              	.L80:
 358:Core/Src/main.c ****   }
 1035              		.loc 1 358 5 view .LVU242
 1036 00a0 FFF7FEFF 		bl	Error_Handler
 1037              	.LVL92:
 1038              	.L81:
 372:Core/Src/main.c ****   }
 1039              		.loc 1 372 5 view .LVU243
 1040 00a4 FFF7FEFF 		bl	Error_Handler
 1041              	.LVL93:
 1042              	.L83:
 1043              		.align	2
 1044              	.L82:
 1045 00a8 00380240 		.word	1073887232
 1046 00ac 00700040 		.word	1073770496
 1047              		.cfi_endproc
 1048              	.LFE179:
 1050              		.section	.text.main,"ax",%progbits
 1051              		.align	1
 1052              		.global	main
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1057              	main:
 1058              	.LFB178:
 263:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1059              		.loc 1 263 1 view -0
 1060              		.cfi_startproc
 1061              		@ Volatile: function does not return.
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064 0000 08B5     		push	{r3, lr}
 1065              	.LCFI18:
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 3, -8
 1068              		.cfi_offset 14, -4
ARM GAS  /tmp/cc3SeI2V.s 			page 31


 268:Core/Src/main.c **** 
 1069              		.loc 1 268 3 view .LVU245
 1070              	.LBB60:
 1071              	.LBI60:
 1072              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm7.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:Drivers/CMSIS/Include/core_cm7.h **** 
  40:Drivers/CMSIS/Include/core_cm7.h **** /**
  41:Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm7.h **** 
  47:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/cc3SeI2V.s 			page 32


  53:Drivers/CMSIS/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h **** /**
  59:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:Drivers/CMSIS/Include/core_cm7.h ****  */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm7.h **** 
  73:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm7.h ****     #else
  81:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm7.h ****   #else
  85:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm7.h **** 
  88:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  90:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm7.h ****     #else
  93:Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm7.h ****   #else
  97:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm7.h ****     #else
 105:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm7.h ****   #else
 109:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
ARM GAS  /tmp/cc3SeI2V.s 			page 33


 110:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm7.h ****     #else
 117:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm7.h ****   #else
 121:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm7.h **** 
 124:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Include/core_cm7.h **** 
 165:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm7.h **** }
ARM GAS  /tmp/cc3SeI2V.s 			page 34


 167:Drivers/CMSIS/Include/core_cm7.h **** #endif
 168:Drivers/CMSIS/Include/core_cm7.h **** 
 169:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm7.h **** 
 171:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm7.h **** 
 173:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm7.h **** 
 176:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:Drivers/CMSIS/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm7.h **** 
 202:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 216:Drivers/CMSIS/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 221:Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:Drivers/CMSIS/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
ARM GAS  /tmp/cc3SeI2V.s 			page 35


 224:Drivers/CMSIS/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:Drivers/CMSIS/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h **** 
 247:Drivers/CMSIS/Include/core_cm7.h **** 
 248:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 252:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:Drivers/CMSIS/Include/core_cm7.h **** /**
 260:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:Drivers/CMSIS/Include/core_cm7.h **** */
 263:Drivers/CMSIS/Include/core_cm7.h **** 
 264:Drivers/CMSIS/Include/core_cm7.h **** /**
 265:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:Drivers/CMSIS/Include/core_cm7.h ****   @{
 269:Drivers/CMSIS/Include/core_cm7.h ****  */
 270:Drivers/CMSIS/Include/core_cm7.h **** 
 271:Drivers/CMSIS/Include/core_cm7.h **** /**
 272:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:Drivers/CMSIS/Include/core_cm7.h ****  */
 274:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 275:Drivers/CMSIS/Include/core_cm7.h **** {
 276:Drivers/CMSIS/Include/core_cm7.h ****   struct
 277:Drivers/CMSIS/Include/core_cm7.h ****   {
 278:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
ARM GAS  /tmp/cc3SeI2V.s 			page 36


 281:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:Drivers/CMSIS/Include/core_cm7.h **** 
 290:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:Drivers/CMSIS/Include/core_cm7.h **** 
 294:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:Drivers/CMSIS/Include/core_cm7.h **** 
 297:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:Drivers/CMSIS/Include/core_cm7.h **** 
 300:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:Drivers/CMSIS/Include/core_cm7.h **** 
 303:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:Drivers/CMSIS/Include/core_cm7.h **** 
 306:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:Drivers/CMSIS/Include/core_cm7.h **** 
 309:Drivers/CMSIS/Include/core_cm7.h **** 
 310:Drivers/CMSIS/Include/core_cm7.h **** /**
 311:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:Drivers/CMSIS/Include/core_cm7.h ****  */
 313:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 314:Drivers/CMSIS/Include/core_cm7.h **** {
 315:Drivers/CMSIS/Include/core_cm7.h ****   struct
 316:Drivers/CMSIS/Include/core_cm7.h ****   {
 317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:Drivers/CMSIS/Include/core_cm7.h **** 
 323:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:Drivers/CMSIS/Include/core_cm7.h **** 
 327:Drivers/CMSIS/Include/core_cm7.h **** 
 328:Drivers/CMSIS/Include/core_cm7.h **** /**
 329:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:Drivers/CMSIS/Include/core_cm7.h ****  */
 331:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 332:Drivers/CMSIS/Include/core_cm7.h **** {
 333:Drivers/CMSIS/Include/core_cm7.h ****   struct
 334:Drivers/CMSIS/Include/core_cm7.h ****   {
 335:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
ARM GAS  /tmp/cc3SeI2V.s 			page 37


 338:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:Drivers/CMSIS/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm7.h **** 
 355:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm7.h **** 
 358:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm7.h **** 
 361:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm7.h **** 
 364:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm7.h **** 
 367:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm7.h **** 
 370:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm7.h **** 
 373:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:Drivers/CMSIS/Include/core_cm7.h **** 
 376:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm7.h **** 
 379:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:Drivers/CMSIS/Include/core_cm7.h **** 
 382:Drivers/CMSIS/Include/core_cm7.h **** 
 383:Drivers/CMSIS/Include/core_cm7.h **** /**
 384:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:Drivers/CMSIS/Include/core_cm7.h ****  */
 386:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 387:Drivers/CMSIS/Include/core_cm7.h **** {
 388:Drivers/CMSIS/Include/core_cm7.h ****   struct
 389:Drivers/CMSIS/Include/core_cm7.h ****   {
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  /tmp/cc3SeI2V.s 			page 38


 395:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:Drivers/CMSIS/Include/core_cm7.h **** 
 398:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:Drivers/CMSIS/Include/core_cm7.h **** 
 402:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:Drivers/CMSIS/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:Drivers/CMSIS/Include/core_cm7.h **** 
 408:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:Drivers/CMSIS/Include/core_cm7.h **** 
 410:Drivers/CMSIS/Include/core_cm7.h **** 
 411:Drivers/CMSIS/Include/core_cm7.h **** /**
 412:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:Drivers/CMSIS/Include/core_cm7.h ****   @{
 416:Drivers/CMSIS/Include/core_cm7.h ****  */
 417:Drivers/CMSIS/Include/core_cm7.h **** 
 418:Drivers/CMSIS/Include/core_cm7.h **** /**
 419:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:Drivers/CMSIS/Include/core_cm7.h ****  */
 421:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 422:Drivers/CMSIS/Include/core_cm7.h **** {
 423:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 427:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:Drivers/CMSIS/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:Drivers/CMSIS/Include/core_cm7.h **** 
 442:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:Drivers/CMSIS/Include/core_cm7.h **** 
 444:Drivers/CMSIS/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Include/core_cm7.h **** /**
 446:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:Drivers/CMSIS/Include/core_cm7.h ****   @{
 450:Drivers/CMSIS/Include/core_cm7.h ****  */
 451:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 39


 452:Drivers/CMSIS/Include/core_cm7.h **** /**
 453:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:Drivers/CMSIS/Include/core_cm7.h ****  */
 455:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 456:Drivers/CMSIS/Include/core_cm7.h **** {
 457:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 40


 509:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm7.h **** 
 513:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm7.h **** 
 516:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm7.h **** 
 519:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm7.h **** 
 529:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm7.h **** 
 532:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm7.h **** 
 535:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm7.h **** 
 538:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm7.h **** 
 541:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm7.h **** 
 544:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm7.h **** 
 547:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm7.h **** 
 550:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm7.h **** 
 556:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm7.h **** 
 560:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm7.h **** 
 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
ARM GAS  /tmp/cc3SeI2V.s 			page 41


 566:Drivers/CMSIS/Include/core_cm7.h **** 
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm7.h **** 
 570:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm7.h **** 
 573:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm7.h **** 
 576:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm7.h **** 
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm7.h **** 
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm7.h **** 
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm7.h **** 
 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm7.h **** 
 605:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm7.h **** 
 608:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm7.h **** 
 611:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm7.h **** 
 614:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm7.h **** 
 617:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
ARM GAS  /tmp/cc3SeI2V.s 			page 42


 623:Drivers/CMSIS/Include/core_cm7.h **** 
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm7.h **** 
 627:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm7.h **** 
 630:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm7.h **** 
 633:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm7.h **** 
 636:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm7.h **** 
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm7.h **** 
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm7.h **** 
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm7.h **** 
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm7.h **** 
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm7.h **** 
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm7.h **** 
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm7.h **** 
 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm7.h **** 
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm7.h **** 
 677:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 43


 680:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm7.h **** 
 683:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm7.h **** 
 686:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm7.h **** 
 692:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm7.h **** 
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm7.h **** 
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm7.h **** 
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm7.h **** 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm7.h **** 
 708:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:Drivers/CMSIS/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:Drivers/CMSIS/Include/core_cm7.h **** 
 718:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm7.h **** 
 721:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm7.h **** 
 724:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm7.h **** 
 727:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:Drivers/CMSIS/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:Drivers/CMSIS/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 44


 737:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:Drivers/CMSIS/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm7.h **** 
 747:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:Drivers/CMSIS/Include/core_cm7.h **** 
 750:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:Drivers/CMSIS/Include/core_cm7.h **** 
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:Drivers/CMSIS/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:Drivers/CMSIS/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:Drivers/CMSIS/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:Drivers/CMSIS/Include/core_cm7.h **** 
 770:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:Drivers/CMSIS/Include/core_cm7.h **** 
 773:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:Drivers/CMSIS/Include/core_cm7.h **** 
 776:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:Drivers/CMSIS/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:Drivers/CMSIS/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:Drivers/CMSIS/Include/core_cm7.h **** 
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:Drivers/CMSIS/Include/core_cm7.h **** 
 789:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:Drivers/CMSIS/Include/core_cm7.h **** 
 792:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
ARM GAS  /tmp/cc3SeI2V.s 			page 45


 794:Drivers/CMSIS/Include/core_cm7.h **** 
 795:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:Drivers/CMSIS/Include/core_cm7.h **** 
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:Drivers/CMSIS/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:Drivers/CMSIS/Include/core_cm7.h **** 
 808:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:Drivers/CMSIS/Include/core_cm7.h **** 
 811:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:Drivers/CMSIS/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:Drivers/CMSIS/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:Drivers/CMSIS/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:Drivers/CMSIS/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:Drivers/CMSIS/Include/core_cm7.h **** 
 829:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:Drivers/CMSIS/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:Drivers/CMSIS/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:Drivers/CMSIS/Include/core_cm7.h **** 
 840:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm7.h **** 
 843:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:Drivers/CMSIS/Include/core_cm7.h **** 
 849:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
ARM GAS  /tmp/cc3SeI2V.s 			page 46


 851:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm7.h **** 
 853:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:Drivers/CMSIS/Include/core_cm7.h **** 
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:Drivers/CMSIS/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:Drivers/CMSIS/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:Drivers/CMSIS/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:Drivers/CMSIS/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:Drivers/CMSIS/Include/core_cm7.h **** 
 873:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:Drivers/CMSIS/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:Drivers/CMSIS/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm7.h **** 
 883:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:Drivers/CMSIS/Include/core_cm7.h **** 
 886:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:Drivers/CMSIS/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:Drivers/CMSIS/Include/core_cm7.h **** 
 893:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:Drivers/CMSIS/Include/core_cm7.h **** 
 896:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:Drivers/CMSIS/Include/core_cm7.h **** 
 899:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:Drivers/CMSIS/Include/core_cm7.h **** 
 902:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:Drivers/CMSIS/Include/core_cm7.h **** 
 905:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 47


 908:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:Drivers/CMSIS/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Include/core_cm7.h **** 
 911:Drivers/CMSIS/Include/core_cm7.h **** /**
 912:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:Drivers/CMSIS/Include/core_cm7.h ****   @{
 916:Drivers/CMSIS/Include/core_cm7.h ****  */
 917:Drivers/CMSIS/Include/core_cm7.h **** 
 918:Drivers/CMSIS/Include/core_cm7.h **** /**
 919:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:Drivers/CMSIS/Include/core_cm7.h ****  */
 921:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 922:Drivers/CMSIS/Include/core_cm7.h **** {
 923:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:Drivers/CMSIS/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:Drivers/CMSIS/Include/core_cm7.h **** 
 932:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 935:Drivers/CMSIS/Include/core_cm7.h **** 
 936:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 938:Drivers/CMSIS/Include/core_cm7.h **** 
 939:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 940:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 941:Drivers/CMSIS/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 943:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 944:Drivers/CMSIS/Include/core_cm7.h **** 
 945:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 946:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 947:Drivers/CMSIS/Include/core_cm7.h **** 
 948:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 949:Drivers/CMSIS/Include/core_cm7.h **** 
 950:Drivers/CMSIS/Include/core_cm7.h **** 
 951:Drivers/CMSIS/Include/core_cm7.h **** /**
 952:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 953:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 954:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 955:Drivers/CMSIS/Include/core_cm7.h ****   @{
 956:Drivers/CMSIS/Include/core_cm7.h ****  */
 957:Drivers/CMSIS/Include/core_cm7.h **** 
 958:Drivers/CMSIS/Include/core_cm7.h **** /**
 959:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 960:Drivers/CMSIS/Include/core_cm7.h ****  */
 961:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 962:Drivers/CMSIS/Include/core_cm7.h **** {
 963:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 964:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
ARM GAS  /tmp/cc3SeI2V.s 			page 48


 965:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 966:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 967:Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 968:Drivers/CMSIS/Include/core_cm7.h **** 
 969:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 970:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 971:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 972:Drivers/CMSIS/Include/core_cm7.h **** 
 973:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 974:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 975:Drivers/CMSIS/Include/core_cm7.h **** 
 976:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 977:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 978:Drivers/CMSIS/Include/core_cm7.h **** 
 979:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 980:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 981:Drivers/CMSIS/Include/core_cm7.h **** 
 982:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 983:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 984:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 985:Drivers/CMSIS/Include/core_cm7.h **** 
 986:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 987:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 988:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 989:Drivers/CMSIS/Include/core_cm7.h **** 
 990:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 991:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 992:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 993:Drivers/CMSIS/Include/core_cm7.h **** 
 994:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 995:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 996:Drivers/CMSIS/Include/core_cm7.h **** 
 997:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 998:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 999:Drivers/CMSIS/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1001:Drivers/CMSIS/Include/core_cm7.h **** 
1002:Drivers/CMSIS/Include/core_cm7.h **** 
1003:Drivers/CMSIS/Include/core_cm7.h **** /**
1004:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1005:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1006:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1007:Drivers/CMSIS/Include/core_cm7.h ****   @{
1008:Drivers/CMSIS/Include/core_cm7.h ****  */
1009:Drivers/CMSIS/Include/core_cm7.h **** 
1010:Drivers/CMSIS/Include/core_cm7.h **** /**
1011:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1012:Drivers/CMSIS/Include/core_cm7.h ****  */
1013:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1014:Drivers/CMSIS/Include/core_cm7.h **** {
1015:Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1016:Drivers/CMSIS/Include/core_cm7.h ****   {
1017:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1018:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1019:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1020:Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1021:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
ARM GAS  /tmp/cc3SeI2V.s 			page 49


1022:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1023:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1024:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1025:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1026:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1027:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1028:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1029:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1030:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1031:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1032:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1033:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1034:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1035:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1036:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1037:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1038:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1039:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1040:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1041:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1042:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1043:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1044:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1045:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1046:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1047:Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1048:Drivers/CMSIS/Include/core_cm7.h **** 
1049:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1050:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1051:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1052:Drivers/CMSIS/Include/core_cm7.h **** 
1053:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1054:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1055:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1056:Drivers/CMSIS/Include/core_cm7.h **** 
1057:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1058:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1059:Drivers/CMSIS/Include/core_cm7.h **** 
1060:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1061:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1062:Drivers/CMSIS/Include/core_cm7.h **** 
1063:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1064:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1065:Drivers/CMSIS/Include/core_cm7.h **** 
1066:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1067:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1068:Drivers/CMSIS/Include/core_cm7.h **** 
1069:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1070:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1071:Drivers/CMSIS/Include/core_cm7.h **** 
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1074:Drivers/CMSIS/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1077:Drivers/CMSIS/Include/core_cm7.h **** 
1078:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
ARM GAS  /tmp/cc3SeI2V.s 			page 50


1079:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1080:Drivers/CMSIS/Include/core_cm7.h **** 
1081:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1082:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1083:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1084:Drivers/CMSIS/Include/core_cm7.h **** 
1085:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1086:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1087:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1088:Drivers/CMSIS/Include/core_cm7.h **** 
1089:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1090:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1091:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1092:Drivers/CMSIS/Include/core_cm7.h **** 
1093:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1094:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1095:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1096:Drivers/CMSIS/Include/core_cm7.h **** 
1097:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1098:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1099:Drivers/CMSIS/Include/core_cm7.h **** 
1100:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1101:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1102:Drivers/CMSIS/Include/core_cm7.h **** 
1103:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1104:Drivers/CMSIS/Include/core_cm7.h **** 
1105:Drivers/CMSIS/Include/core_cm7.h **** 
1106:Drivers/CMSIS/Include/core_cm7.h **** /**
1107:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1108:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1109:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1110:Drivers/CMSIS/Include/core_cm7.h ****   @{
1111:Drivers/CMSIS/Include/core_cm7.h ****  */
1112:Drivers/CMSIS/Include/core_cm7.h **** 
1113:Drivers/CMSIS/Include/core_cm7.h **** /**
1114:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1115:Drivers/CMSIS/Include/core_cm7.h ****  */
1116:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1117:Drivers/CMSIS/Include/core_cm7.h **** {
1118:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1119:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1120:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1121:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1122:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1123:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1124:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1125:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1126:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1127:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1128:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1129:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1130:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1131:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1132:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1133:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1134:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1135:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
ARM GAS  /tmp/cc3SeI2V.s 			page 51


1136:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1137:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1138:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1139:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1140:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1141:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1142:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1143:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1144:Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1145:Drivers/CMSIS/Include/core_cm7.h **** 
1146:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1147:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1148:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1149:Drivers/CMSIS/Include/core_cm7.h **** 
1150:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1152:Drivers/CMSIS/Include/core_cm7.h **** 
1153:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1155:Drivers/CMSIS/Include/core_cm7.h **** 
1156:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1158:Drivers/CMSIS/Include/core_cm7.h **** 
1159:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1161:Drivers/CMSIS/Include/core_cm7.h **** 
1162:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1164:Drivers/CMSIS/Include/core_cm7.h **** 
1165:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1167:Drivers/CMSIS/Include/core_cm7.h **** 
1168:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1170:Drivers/CMSIS/Include/core_cm7.h **** 
1171:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1173:Drivers/CMSIS/Include/core_cm7.h **** 
1174:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1176:Drivers/CMSIS/Include/core_cm7.h **** 
1177:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1179:Drivers/CMSIS/Include/core_cm7.h **** 
1180:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1182:Drivers/CMSIS/Include/core_cm7.h **** 
1183:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1185:Drivers/CMSIS/Include/core_cm7.h **** 
1186:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1188:Drivers/CMSIS/Include/core_cm7.h **** 
1189:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1190:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1191:Drivers/CMSIS/Include/core_cm7.h **** 
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
ARM GAS  /tmp/cc3SeI2V.s 			page 52


1193:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1194:Drivers/CMSIS/Include/core_cm7.h **** 
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1200:Drivers/CMSIS/Include/core_cm7.h **** 
1201:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1202:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1203:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1204:Drivers/CMSIS/Include/core_cm7.h **** 
1205:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1206:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1207:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1208:Drivers/CMSIS/Include/core_cm7.h **** 
1209:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1210:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1211:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1212:Drivers/CMSIS/Include/core_cm7.h **** 
1213:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1214:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1215:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1216:Drivers/CMSIS/Include/core_cm7.h **** 
1217:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1219:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1220:Drivers/CMSIS/Include/core_cm7.h **** 
1221:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1222:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1223:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1224:Drivers/CMSIS/Include/core_cm7.h **** 
1225:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1226:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1227:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1228:Drivers/CMSIS/Include/core_cm7.h **** 
1229:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1231:Drivers/CMSIS/Include/core_cm7.h **** 
1232:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1234:Drivers/CMSIS/Include/core_cm7.h **** 
1235:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1237:Drivers/CMSIS/Include/core_cm7.h **** 
1238:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1240:Drivers/CMSIS/Include/core_cm7.h **** 
1241:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1242:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1243:Drivers/CMSIS/Include/core_cm7.h **** 
1244:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1245:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1246:Drivers/CMSIS/Include/core_cm7.h **** 
1247:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1248:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1249:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 53


1250:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1251:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1252:Drivers/CMSIS/Include/core_cm7.h **** 
1253:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1254:Drivers/CMSIS/Include/core_cm7.h **** 
1255:Drivers/CMSIS/Include/core_cm7.h **** 
1256:Drivers/CMSIS/Include/core_cm7.h **** /**
1257:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1258:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1259:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1260:Drivers/CMSIS/Include/core_cm7.h ****   @{
1261:Drivers/CMSIS/Include/core_cm7.h ****  */
1262:Drivers/CMSIS/Include/core_cm7.h **** 
1263:Drivers/CMSIS/Include/core_cm7.h **** /**
1264:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1265:Drivers/CMSIS/Include/core_cm7.h ****  */
1266:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1267:Drivers/CMSIS/Include/core_cm7.h **** {
1268:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1269:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1270:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1271:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1272:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1273:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1274:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1275:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1276:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1277:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1278:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1279:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1280:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1281:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1282:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1283:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1284:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1285:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1286:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1287:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1288:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1289:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1290:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1291:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1292:Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1293:Drivers/CMSIS/Include/core_cm7.h **** 
1294:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1295:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1296:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1297:Drivers/CMSIS/Include/core_cm7.h **** 
1298:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1299:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1300:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1301:Drivers/CMSIS/Include/core_cm7.h **** 
1302:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1303:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1304:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1305:Drivers/CMSIS/Include/core_cm7.h **** 
1306:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
ARM GAS  /tmp/cc3SeI2V.s 			page 54


1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1308:Drivers/CMSIS/Include/core_cm7.h **** 
1309:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1310:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1311:Drivers/CMSIS/Include/core_cm7.h **** 
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1313:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1314:Drivers/CMSIS/Include/core_cm7.h **** 
1315:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1317:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1318:Drivers/CMSIS/Include/core_cm7.h **** 
1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1320:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1321:Drivers/CMSIS/Include/core_cm7.h **** 
1322:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1323:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1324:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1325:Drivers/CMSIS/Include/core_cm7.h **** 
1326:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1328:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1329:Drivers/CMSIS/Include/core_cm7.h **** 
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1335:Drivers/CMSIS/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1338:Drivers/CMSIS/Include/core_cm7.h **** 
1339:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1341:Drivers/CMSIS/Include/core_cm7.h **** 
1342:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1343:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1344:Drivers/CMSIS/Include/core_cm7.h **** 
1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1346:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1347:Drivers/CMSIS/Include/core_cm7.h **** 
1348:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1349:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1350:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1351:Drivers/CMSIS/Include/core_cm7.h **** 
1352:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1354:Drivers/CMSIS/Include/core_cm7.h **** 
1355:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1357:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1358:Drivers/CMSIS/Include/core_cm7.h **** 
1359:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1361:Drivers/CMSIS/Include/core_cm7.h **** 
1362:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  /tmp/cc3SeI2V.s 			page 55


1364:Drivers/CMSIS/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1367:Drivers/CMSIS/Include/core_cm7.h **** 
1368:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1370:Drivers/CMSIS/Include/core_cm7.h **** 
1371:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1372:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1373:Drivers/CMSIS/Include/core_cm7.h **** 
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1375:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1376:Drivers/CMSIS/Include/core_cm7.h **** 
1377:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1379:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1380:Drivers/CMSIS/Include/core_cm7.h **** 
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1382:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1383:Drivers/CMSIS/Include/core_cm7.h **** 
1384:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1385:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1386:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1387:Drivers/CMSIS/Include/core_cm7.h **** 
1388:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1389:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1390:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1391:Drivers/CMSIS/Include/core_cm7.h **** 
1392:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1397:Drivers/CMSIS/Include/core_cm7.h **** 
1398:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1399:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1400:Drivers/CMSIS/Include/core_cm7.h **** 
1401:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1402:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1405:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1406:Drivers/CMSIS/Include/core_cm7.h **** 
1407:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1408:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1409:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1410:Drivers/CMSIS/Include/core_cm7.h **** 
1411:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1412:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1413:Drivers/CMSIS/Include/core_cm7.h **** 
1414:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1415:Drivers/CMSIS/Include/core_cm7.h **** 
1416:Drivers/CMSIS/Include/core_cm7.h **** 
1417:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1418:Drivers/CMSIS/Include/core_cm7.h **** /**
1419:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1420:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
ARM GAS  /tmp/cc3SeI2V.s 			page 56


1421:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1422:Drivers/CMSIS/Include/core_cm7.h ****   @{
1423:Drivers/CMSIS/Include/core_cm7.h ****  */
1424:Drivers/CMSIS/Include/core_cm7.h **** 
1425:Drivers/CMSIS/Include/core_cm7.h **** /**
1426:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1427:Drivers/CMSIS/Include/core_cm7.h ****  */
1428:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1429:Drivers/CMSIS/Include/core_cm7.h **** {
1430:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1432:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1434:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1435:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1436:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1437:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1438:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1439:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1440:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1441:Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1442:Drivers/CMSIS/Include/core_cm7.h **** 
1443:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1444:Drivers/CMSIS/Include/core_cm7.h **** 
1445:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1447:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1448:Drivers/CMSIS/Include/core_cm7.h **** 
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1454:Drivers/CMSIS/Include/core_cm7.h **** 
1455:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1456:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1457:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1458:Drivers/CMSIS/Include/core_cm7.h **** 
1459:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1461:Drivers/CMSIS/Include/core_cm7.h **** 
1462:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1464:Drivers/CMSIS/Include/core_cm7.h **** 
1465:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1466:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1467:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1468:Drivers/CMSIS/Include/core_cm7.h **** 
1469:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1471:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1472:Drivers/CMSIS/Include/core_cm7.h **** 
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1475:Drivers/CMSIS/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
ARM GAS  /tmp/cc3SeI2V.s 			page 57


1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1481:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1482:Drivers/CMSIS/Include/core_cm7.h **** 
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1484:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1485:Drivers/CMSIS/Include/core_cm7.h **** 
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1487:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1488:Drivers/CMSIS/Include/core_cm7.h **** 
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1490:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1491:Drivers/CMSIS/Include/core_cm7.h **** 
1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1493:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1494:Drivers/CMSIS/Include/core_cm7.h **** 
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1496:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1497:Drivers/CMSIS/Include/core_cm7.h **** 
1498:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1499:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1500:Drivers/CMSIS/Include/core_cm7.h **** 
1501:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1502:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1503:Drivers/CMSIS/Include/core_cm7.h **** 
1504:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1505:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1506:Drivers/CMSIS/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1508:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1509:Drivers/CMSIS/Include/core_cm7.h **** 
1510:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1511:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1512:Drivers/CMSIS/Include/core_cm7.h **** 
1513:Drivers/CMSIS/Include/core_cm7.h **** 
1514:Drivers/CMSIS/Include/core_cm7.h **** /**
1515:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1516:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1517:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1518:Drivers/CMSIS/Include/core_cm7.h ****   @{
1519:Drivers/CMSIS/Include/core_cm7.h ****  */
1520:Drivers/CMSIS/Include/core_cm7.h **** 
1521:Drivers/CMSIS/Include/core_cm7.h **** /**
1522:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1523:Drivers/CMSIS/Include/core_cm7.h ****  */
1524:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1525:Drivers/CMSIS/Include/core_cm7.h **** {
1526:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1527:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1528:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1529:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1530:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1531:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1532:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1533:Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1534:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 58


1535:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1536:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1537:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1538:Drivers/CMSIS/Include/core_cm7.h **** 
1539:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1540:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1541:Drivers/CMSIS/Include/core_cm7.h **** 
1542:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1544:Drivers/CMSIS/Include/core_cm7.h **** 
1545:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1547:Drivers/CMSIS/Include/core_cm7.h **** 
1548:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1549:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1550:Drivers/CMSIS/Include/core_cm7.h **** 
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1552:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1553:Drivers/CMSIS/Include/core_cm7.h **** 
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1559:Drivers/CMSIS/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1562:Drivers/CMSIS/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1565:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1566:Drivers/CMSIS/Include/core_cm7.h **** 
1567:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1569:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1570:Drivers/CMSIS/Include/core_cm7.h **** 
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1572:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1573:Drivers/CMSIS/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1575:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1576:Drivers/CMSIS/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1578:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1579:Drivers/CMSIS/Include/core_cm7.h **** 
1580:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1581:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1582:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1583:Drivers/CMSIS/Include/core_cm7.h **** 
1584:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1586:Drivers/CMSIS/Include/core_cm7.h **** 
1587:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1589:Drivers/CMSIS/Include/core_cm7.h **** 
1590:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1591:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
ARM GAS  /tmp/cc3SeI2V.s 			page 59


1592:Drivers/CMSIS/Include/core_cm7.h **** 
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1594:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1595:Drivers/CMSIS/Include/core_cm7.h **** 
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1597:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1598:Drivers/CMSIS/Include/core_cm7.h **** 
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1600:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1601:Drivers/CMSIS/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1603:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1604:Drivers/CMSIS/Include/core_cm7.h **** 
1605:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1606:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1607:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1608:Drivers/CMSIS/Include/core_cm7.h **** 
1609:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1610:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1611:Drivers/CMSIS/Include/core_cm7.h **** 
1612:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1613:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1614:Drivers/CMSIS/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1616:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1617:Drivers/CMSIS/Include/core_cm7.h **** 
1618:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1619:Drivers/CMSIS/Include/core_cm7.h **** 
1620:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1621:Drivers/CMSIS/Include/core_cm7.h **** 
1622:Drivers/CMSIS/Include/core_cm7.h **** 
1623:Drivers/CMSIS/Include/core_cm7.h **** /**
1624:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1625:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1626:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1627:Drivers/CMSIS/Include/core_cm7.h ****   @{
1628:Drivers/CMSIS/Include/core_cm7.h ****  */
1629:Drivers/CMSIS/Include/core_cm7.h **** 
1630:Drivers/CMSIS/Include/core_cm7.h **** /**
1631:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1632:Drivers/CMSIS/Include/core_cm7.h ****  */
1633:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1634:Drivers/CMSIS/Include/core_cm7.h **** {
1635:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1636:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1637:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1638:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1639:Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1640:Drivers/CMSIS/Include/core_cm7.h **** 
1641:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1642:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1643:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1644:Drivers/CMSIS/Include/core_cm7.h **** 
1645:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1646:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1647:Drivers/CMSIS/Include/core_cm7.h **** 
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
ARM GAS  /tmp/cc3SeI2V.s 			page 60


1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1659:Drivers/CMSIS/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1662:Drivers/CMSIS/Include/core_cm7.h **** 
1663:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1664:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1665:Drivers/CMSIS/Include/core_cm7.h **** 
1666:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1667:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1668:Drivers/CMSIS/Include/core_cm7.h **** 
1669:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1670:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1671:Drivers/CMSIS/Include/core_cm7.h **** 
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1673:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1674:Drivers/CMSIS/Include/core_cm7.h **** 
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1676:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1677:Drivers/CMSIS/Include/core_cm7.h **** 
1678:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1679:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1680:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1681:Drivers/CMSIS/Include/core_cm7.h **** 
1682:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1683:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1684:Drivers/CMSIS/Include/core_cm7.h **** 
1685:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1687:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1688:Drivers/CMSIS/Include/core_cm7.h **** 
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1690:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1691:Drivers/CMSIS/Include/core_cm7.h **** 
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1703:Drivers/CMSIS/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1705:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
ARM GAS  /tmp/cc3SeI2V.s 			page 61


1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1708:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1709:Drivers/CMSIS/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1711:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1712:Drivers/CMSIS/Include/core_cm7.h **** 
1713:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1714:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1715:Drivers/CMSIS/Include/core_cm7.h **** 
1716:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1717:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1718:Drivers/CMSIS/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1720:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1721:Drivers/CMSIS/Include/core_cm7.h **** 
1722:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1723:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1724:Drivers/CMSIS/Include/core_cm7.h **** 
1725:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1726:Drivers/CMSIS/Include/core_cm7.h **** 
1727:Drivers/CMSIS/Include/core_cm7.h **** 
1728:Drivers/CMSIS/Include/core_cm7.h **** /**
1729:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1730:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1731:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1732:Drivers/CMSIS/Include/core_cm7.h ****   @{
1733:Drivers/CMSIS/Include/core_cm7.h ****  */
1734:Drivers/CMSIS/Include/core_cm7.h **** 
1735:Drivers/CMSIS/Include/core_cm7.h **** /**
1736:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1737:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1738:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1739:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1740:Drivers/CMSIS/Include/core_cm7.h **** */
1741:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1742:Drivers/CMSIS/Include/core_cm7.h **** 
1743:Drivers/CMSIS/Include/core_cm7.h **** /**
1744:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1745:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1746:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1747:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1748:Drivers/CMSIS/Include/core_cm7.h **** */
1749:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1750:Drivers/CMSIS/Include/core_cm7.h **** 
1751:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1752:Drivers/CMSIS/Include/core_cm7.h **** 
1753:Drivers/CMSIS/Include/core_cm7.h **** 
1754:Drivers/CMSIS/Include/core_cm7.h **** /**
1755:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1756:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1757:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1758:Drivers/CMSIS/Include/core_cm7.h ****   @{
1759:Drivers/CMSIS/Include/core_cm7.h ****  */
1760:Drivers/CMSIS/Include/core_cm7.h **** 
1761:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1762:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
ARM GAS  /tmp/cc3SeI2V.s 			page 62


1763:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1764:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1765:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1766:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1767:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1768:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1769:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1770:Drivers/CMSIS/Include/core_cm7.h **** 
1771:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1772:Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1773:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1774:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1775:Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1776:Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1777:Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1778:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1779:Drivers/CMSIS/Include/core_cm7.h **** 
1780:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1781:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1782:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1783:Drivers/CMSIS/Include/core_cm7.h **** #endif
1784:Drivers/CMSIS/Include/core_cm7.h **** 
1785:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1786:Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1787:Drivers/CMSIS/Include/core_cm7.h **** 
1788:Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1789:Drivers/CMSIS/Include/core_cm7.h **** 
1790:Drivers/CMSIS/Include/core_cm7.h **** 
1791:Drivers/CMSIS/Include/core_cm7.h **** 
1792:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1793:Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1794:Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1795:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1796:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1797:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1798:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1799:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1800:Drivers/CMSIS/Include/core_cm7.h **** /**
1801:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1802:Drivers/CMSIS/Include/core_cm7.h **** */
1803:Drivers/CMSIS/Include/core_cm7.h **** 
1804:Drivers/CMSIS/Include/core_cm7.h **** 
1805:Drivers/CMSIS/Include/core_cm7.h **** 
1806:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1807:Drivers/CMSIS/Include/core_cm7.h **** /**
1808:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1809:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1810:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1811:Drivers/CMSIS/Include/core_cm7.h ****   @{
1812:Drivers/CMSIS/Include/core_cm7.h ****  */
1813:Drivers/CMSIS/Include/core_cm7.h **** 
1814:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1815:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1816:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1817:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1818:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1819:Drivers/CMSIS/Include/core_cm7.h **** #else
ARM GAS  /tmp/cc3SeI2V.s 			page 63


1820:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1821:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1822:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1823:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1824:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1825:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1826:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1827:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1828:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1829:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1830:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1831:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1832:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1833:Drivers/CMSIS/Include/core_cm7.h **** 
1834:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1835:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1836:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1837:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1838:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1839:Drivers/CMSIS/Include/core_cm7.h **** #else
1840:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1841:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1842:Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1843:Drivers/CMSIS/Include/core_cm7.h **** 
1844:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1845:Drivers/CMSIS/Include/core_cm7.h **** 
1846:Drivers/CMSIS/Include/core_cm7.h **** 
1847:Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1848:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1849:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1850:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1851:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1852:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1853:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1854:Drivers/CMSIS/Include/core_cm7.h **** 
1855:Drivers/CMSIS/Include/core_cm7.h **** 
1856:Drivers/CMSIS/Include/core_cm7.h **** /**
1857:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1858:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1859:Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1860:Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1861:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1862:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1863:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1864:Drivers/CMSIS/Include/core_cm7.h ****  */
1865:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1866:Drivers/CMSIS/Include/core_cm7.h **** {
1867:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1868:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1869:Drivers/CMSIS/Include/core_cm7.h **** 
1870:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1871:Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1872:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1873:Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1874:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1875:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1876:Drivers/CMSIS/Include/core_cm7.h **** }
ARM GAS  /tmp/cc3SeI2V.s 			page 64


1877:Drivers/CMSIS/Include/core_cm7.h **** 
1878:Drivers/CMSIS/Include/core_cm7.h **** 
1879:Drivers/CMSIS/Include/core_cm7.h **** /**
1880:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1881:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1882:Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1883:Drivers/CMSIS/Include/core_cm7.h ****  */
1884:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1885:Drivers/CMSIS/Include/core_cm7.h **** {
1886:Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1887:Drivers/CMSIS/Include/core_cm7.h **** }
1888:Drivers/CMSIS/Include/core_cm7.h **** 
1889:Drivers/CMSIS/Include/core_cm7.h **** 
1890:Drivers/CMSIS/Include/core_cm7.h **** /**
1891:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1892:Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1893:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1894:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1895:Drivers/CMSIS/Include/core_cm7.h ****  */
1896:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1897:Drivers/CMSIS/Include/core_cm7.h **** {
1898:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1899:Drivers/CMSIS/Include/core_cm7.h ****   {
1900:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1901:Drivers/CMSIS/Include/core_cm7.h ****   }
1902:Drivers/CMSIS/Include/core_cm7.h **** }
1903:Drivers/CMSIS/Include/core_cm7.h **** 
1904:Drivers/CMSIS/Include/core_cm7.h **** 
1905:Drivers/CMSIS/Include/core_cm7.h **** /**
1906:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1907:Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1908:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1909:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1910:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1911:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1912:Drivers/CMSIS/Include/core_cm7.h ****  */
1913:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1914:Drivers/CMSIS/Include/core_cm7.h **** {
1915:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1916:Drivers/CMSIS/Include/core_cm7.h ****   {
1917:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1918:Drivers/CMSIS/Include/core_cm7.h ****   }
1919:Drivers/CMSIS/Include/core_cm7.h ****   else
1920:Drivers/CMSIS/Include/core_cm7.h ****   {
1921:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1922:Drivers/CMSIS/Include/core_cm7.h ****   }
1923:Drivers/CMSIS/Include/core_cm7.h **** }
1924:Drivers/CMSIS/Include/core_cm7.h **** 
1925:Drivers/CMSIS/Include/core_cm7.h **** 
1926:Drivers/CMSIS/Include/core_cm7.h **** /**
1927:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1928:Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1929:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1930:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1931:Drivers/CMSIS/Include/core_cm7.h ****  */
1932:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1933:Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/cc3SeI2V.s 			page 65


1934:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1935:Drivers/CMSIS/Include/core_cm7.h ****   {
1936:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1937:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1938:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1939:Drivers/CMSIS/Include/core_cm7.h ****   }
1940:Drivers/CMSIS/Include/core_cm7.h **** }
1941:Drivers/CMSIS/Include/core_cm7.h **** 
1942:Drivers/CMSIS/Include/core_cm7.h **** 
1943:Drivers/CMSIS/Include/core_cm7.h **** /**
1944:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1945:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1946:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1947:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1948:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1949:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1950:Drivers/CMSIS/Include/core_cm7.h ****  */
1951:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1952:Drivers/CMSIS/Include/core_cm7.h **** {
1953:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1954:Drivers/CMSIS/Include/core_cm7.h ****   {
1955:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1956:Drivers/CMSIS/Include/core_cm7.h ****   }
1957:Drivers/CMSIS/Include/core_cm7.h ****   else
1958:Drivers/CMSIS/Include/core_cm7.h ****   {
1959:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1960:Drivers/CMSIS/Include/core_cm7.h ****   }
1961:Drivers/CMSIS/Include/core_cm7.h **** }
1962:Drivers/CMSIS/Include/core_cm7.h **** 
1963:Drivers/CMSIS/Include/core_cm7.h **** 
1964:Drivers/CMSIS/Include/core_cm7.h **** /**
1965:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1966:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1967:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1968:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1969:Drivers/CMSIS/Include/core_cm7.h ****  */
1970:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1971:Drivers/CMSIS/Include/core_cm7.h **** {
1972:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1973:Drivers/CMSIS/Include/core_cm7.h ****   {
1974:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1975:Drivers/CMSIS/Include/core_cm7.h ****   }
1976:Drivers/CMSIS/Include/core_cm7.h **** }
1977:Drivers/CMSIS/Include/core_cm7.h **** 
1978:Drivers/CMSIS/Include/core_cm7.h **** 
1979:Drivers/CMSIS/Include/core_cm7.h **** /**
1980:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1981:Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1982:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1983:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1984:Drivers/CMSIS/Include/core_cm7.h ****  */
1985:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1986:Drivers/CMSIS/Include/core_cm7.h **** {
1987:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1988:Drivers/CMSIS/Include/core_cm7.h ****   {
1989:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1990:Drivers/CMSIS/Include/core_cm7.h ****   }
ARM GAS  /tmp/cc3SeI2V.s 			page 66


1991:Drivers/CMSIS/Include/core_cm7.h **** }
1992:Drivers/CMSIS/Include/core_cm7.h **** 
1993:Drivers/CMSIS/Include/core_cm7.h **** 
1994:Drivers/CMSIS/Include/core_cm7.h **** /**
1995:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1996:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1997:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1998:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1999:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2000:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2001:Drivers/CMSIS/Include/core_cm7.h ****  */
2002:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2003:Drivers/CMSIS/Include/core_cm7.h **** {
2004:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2005:Drivers/CMSIS/Include/core_cm7.h ****   {
2006:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2007:Drivers/CMSIS/Include/core_cm7.h ****   }
2008:Drivers/CMSIS/Include/core_cm7.h ****   else
2009:Drivers/CMSIS/Include/core_cm7.h ****   {
2010:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
2011:Drivers/CMSIS/Include/core_cm7.h ****   }
2012:Drivers/CMSIS/Include/core_cm7.h **** }
2013:Drivers/CMSIS/Include/core_cm7.h **** 
2014:Drivers/CMSIS/Include/core_cm7.h **** 
2015:Drivers/CMSIS/Include/core_cm7.h **** /**
2016:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2017:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2018:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2019:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2020:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2021:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2022:Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2023:Drivers/CMSIS/Include/core_cm7.h ****  */
2024:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2025:Drivers/CMSIS/Include/core_cm7.h **** {
2026:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2027:Drivers/CMSIS/Include/core_cm7.h ****   {
2028:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2029:Drivers/CMSIS/Include/core_cm7.h ****   }
2030:Drivers/CMSIS/Include/core_cm7.h ****   else
2031:Drivers/CMSIS/Include/core_cm7.h ****   {
2032:Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2033:Drivers/CMSIS/Include/core_cm7.h ****   }
2034:Drivers/CMSIS/Include/core_cm7.h **** }
2035:Drivers/CMSIS/Include/core_cm7.h **** 
2036:Drivers/CMSIS/Include/core_cm7.h **** 
2037:Drivers/CMSIS/Include/core_cm7.h **** /**
2038:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2039:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2040:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2041:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2042:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2043:Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2044:Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2045:Drivers/CMSIS/Include/core_cm7.h ****  */
2046:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2047:Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/cc3SeI2V.s 			page 67


2048:Drivers/CMSIS/Include/core_cm7.h **** 
2049:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2050:Drivers/CMSIS/Include/core_cm7.h ****   {
2051:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2052:Drivers/CMSIS/Include/core_cm7.h ****   }
2053:Drivers/CMSIS/Include/core_cm7.h ****   else
2054:Drivers/CMSIS/Include/core_cm7.h ****   {
2055:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2056:Drivers/CMSIS/Include/core_cm7.h ****   }
2057:Drivers/CMSIS/Include/core_cm7.h **** }
2058:Drivers/CMSIS/Include/core_cm7.h **** 
2059:Drivers/CMSIS/Include/core_cm7.h **** 
2060:Drivers/CMSIS/Include/core_cm7.h **** /**
2061:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2062:Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2063:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2064:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2065:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2066:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2067:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2068:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2069:Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2070:Drivers/CMSIS/Include/core_cm7.h ****  */
2071:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2072:Drivers/CMSIS/Include/core_cm7.h **** {
2073:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2074:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2075:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2076:Drivers/CMSIS/Include/core_cm7.h **** 
2077:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2078:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2079:Drivers/CMSIS/Include/core_cm7.h **** 
2080:Drivers/CMSIS/Include/core_cm7.h ****   return (
2081:Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2082:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2083:Drivers/CMSIS/Include/core_cm7.h ****          );
2084:Drivers/CMSIS/Include/core_cm7.h **** }
2085:Drivers/CMSIS/Include/core_cm7.h **** 
2086:Drivers/CMSIS/Include/core_cm7.h **** 
2087:Drivers/CMSIS/Include/core_cm7.h **** /**
2088:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2089:Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2090:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2091:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2092:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2093:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2094:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2095:Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2096:Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2097:Drivers/CMSIS/Include/core_cm7.h ****  */
2098:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2099:Drivers/CMSIS/Include/core_cm7.h **** {
2100:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2101:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2102:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2103:Drivers/CMSIS/Include/core_cm7.h **** 
2104:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
ARM GAS  /tmp/cc3SeI2V.s 			page 68


2105:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2106:Drivers/CMSIS/Include/core_cm7.h **** 
2107:Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2108:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2109:Drivers/CMSIS/Include/core_cm7.h **** }
2110:Drivers/CMSIS/Include/core_cm7.h **** 
2111:Drivers/CMSIS/Include/core_cm7.h **** 
2112:Drivers/CMSIS/Include/core_cm7.h **** /**
2113:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2114:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2115:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2116:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2117:Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2118:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2119:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2120:Drivers/CMSIS/Include/core_cm7.h ****  */
2121:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2122:Drivers/CMSIS/Include/core_cm7.h **** {
2123:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2124:Drivers/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2125:Drivers/CMSIS/Include/core_cm7.h **** }
2126:Drivers/CMSIS/Include/core_cm7.h **** 
2127:Drivers/CMSIS/Include/core_cm7.h **** 
2128:Drivers/CMSIS/Include/core_cm7.h **** /**
2129:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2130:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2131:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2132:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2133:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2134:Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2135:Drivers/CMSIS/Include/core_cm7.h ****  */
2136:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2137:Drivers/CMSIS/Include/core_cm7.h **** {
2138:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2139:Drivers/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2140:Drivers/CMSIS/Include/core_cm7.h **** }
2141:Drivers/CMSIS/Include/core_cm7.h **** 
2142:Drivers/CMSIS/Include/core_cm7.h **** 
2143:Drivers/CMSIS/Include/core_cm7.h **** /**
2144:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2145:Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2146:Drivers/CMSIS/Include/core_cm7.h ****  */
2147:Drivers/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2148:Drivers/CMSIS/Include/core_cm7.h **** {
2149:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2150:Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2151:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2152:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2153:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2154:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2155:Drivers/CMSIS/Include/core_cm7.h **** 
2156:Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2157:Drivers/CMSIS/Include/core_cm7.h ****   {
2158:Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2159:Drivers/CMSIS/Include/core_cm7.h ****   }
2160:Drivers/CMSIS/Include/core_cm7.h **** }
2161:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 69


2162:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2163:Drivers/CMSIS/Include/core_cm7.h **** 
2164:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2165:Drivers/CMSIS/Include/core_cm7.h **** 
2166:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2167:Drivers/CMSIS/Include/core_cm7.h **** 
2168:Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2169:Drivers/CMSIS/Include/core_cm7.h **** 
2170:Drivers/CMSIS/Include/core_cm7.h **** #endif
2171:Drivers/CMSIS/Include/core_cm7.h **** 
2172:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2173:Drivers/CMSIS/Include/core_cm7.h **** /**
2174:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2175:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2176:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2177:Drivers/CMSIS/Include/core_cm7.h ****   @{
2178:Drivers/CMSIS/Include/core_cm7.h ****  */
2179:Drivers/CMSIS/Include/core_cm7.h **** 
2180:Drivers/CMSIS/Include/core_cm7.h **** /**
2181:Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2182:Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2183:Drivers/CMSIS/Include/core_cm7.h ****   \returns
2184:Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2185:Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2186:Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2187:Drivers/CMSIS/Include/core_cm7.h ****  */
2188:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2189:Drivers/CMSIS/Include/core_cm7.h **** {
2190:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2191:Drivers/CMSIS/Include/core_cm7.h **** 
2192:Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2193:Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2194:Drivers/CMSIS/Include/core_cm7.h ****   {
2195:Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2196:Drivers/CMSIS/Include/core_cm7.h ****   }
2197:Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2198:Drivers/CMSIS/Include/core_cm7.h ****   {
2199:Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2200:Drivers/CMSIS/Include/core_cm7.h ****   }
2201:Drivers/CMSIS/Include/core_cm7.h ****   else
2202:Drivers/CMSIS/Include/core_cm7.h ****   {
2203:Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2204:Drivers/CMSIS/Include/core_cm7.h ****   }
2205:Drivers/CMSIS/Include/core_cm7.h **** }
2206:Drivers/CMSIS/Include/core_cm7.h **** 
2207:Drivers/CMSIS/Include/core_cm7.h **** 
2208:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2209:Drivers/CMSIS/Include/core_cm7.h **** 
2210:Drivers/CMSIS/Include/core_cm7.h **** 
2211:Drivers/CMSIS/Include/core_cm7.h **** 
2212:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2213:Drivers/CMSIS/Include/core_cm7.h **** /**
2214:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2215:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2216:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2217:Drivers/CMSIS/Include/core_cm7.h ****   @{
2218:Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/cc3SeI2V.s 			page 70


2219:Drivers/CMSIS/Include/core_cm7.h **** 
2220:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2221:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2222:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2223:Drivers/CMSIS/Include/core_cm7.h **** 
2224:Drivers/CMSIS/Include/core_cm7.h **** 
2225:Drivers/CMSIS/Include/core_cm7.h **** /**
2226:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2227:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2228:Drivers/CMSIS/Include/core_cm7.h ****   */
2229:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
 1073              		.loc 3 2229 22 view .LVU246
 1074              	.LBB61:
2230:Drivers/CMSIS/Include/core_cm7.h **** {
2231:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 1075              		.loc 3 2232 5 view .LVU247
 1076              	.LBB62:
 1077              	.LBI62:
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc3SeI2V.s 			page 71


 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  /tmp/cc3SeI2V.s 			page 72


 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 73


 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc3SeI2V.s 			page 74


 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
ARM GAS  /tmp/cc3SeI2V.s 			page 75


 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  /tmp/cc3SeI2V.s 			page 76


 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc3SeI2V.s 			page 77


 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 78


 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc3SeI2V.s 			page 79


 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /tmp/cc3SeI2V.s 			page 80


 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
ARM GAS  /tmp/cc3SeI2V.s 			page 81


 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc3SeI2V.s 			page 82


 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  /tmp/cc3SeI2V.s 			page 83


 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1078              		.loc 2 877 27 view .LVU248
 1079              	.LBB63:
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1080              		.loc 2 879 3 view .LVU249
 1081              		.syntax unified
 1082              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1083 0002 BFF34F8F 		dsb 0xF
 1084              	@ 0 "" 2
 1085              		.thumb
 1086              		.syntax unified
 1087              	.LBE63:
 1088              	.LBE62:
2233:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 1089              		.loc 3 2233 5 view .LVU250
 1090              	.LBB64:
 1091              	.LBI64:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1092              		.loc 2 866 27 view .LVU251
 1093              	.LBB65:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1094              		.loc 2 868 3 view .LVU252
 1095              		.syntax unified
 1096              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1097 0006 BFF36F8F 		isb 0xF
 1098              	@ 0 "" 2
 1099              		.thumb
 1100              		.syntax unified
 1101              	.LBE65:
 1102              	.LBE64:
2234:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 1103              		.loc 3 2234 5 view .LVU253
 1104              		.loc 3 2234 18 is_stmt 0 view .LVU254
 1105 000a 314B     		ldr	r3, .L92
 1106 000c 0021     		movs	r1, #0
 1107 000e C3F85012 		str	r1, [r3, #592]
2235:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 1108              		.loc 3 2235 5 is_stmt 1 view .LVU255
 1109              	.LBB66:
 1110              	.LBI66:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1111              		.loc 2 877 27 view .LVU256
 1112              	.LBB67:
 1113              		.loc 2 879 3 view .LVU257
ARM GAS  /tmp/cc3SeI2V.s 			page 84


 1114              		.syntax unified
 1115              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1116 0012 BFF34F8F 		dsb 0xF
 1117              	@ 0 "" 2
 1118              		.thumb
 1119              		.syntax unified
 1120              	.LBE67:
 1121              	.LBE66:
2236:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 1122              		.loc 3 2236 5 view .LVU258
 1123              	.LBB68:
 1124              	.LBI68:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1125              		.loc 2 866 27 view .LVU259
 1126              	.LBB69:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1127              		.loc 2 868 3 view .LVU260
 1128              		.syntax unified
 1129              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1130 0016 BFF36F8F 		isb 0xF
 1131              	@ 0 "" 2
 1132              		.thumb
 1133              		.syntax unified
 1134              	.LBE69:
 1135              	.LBE68:
2237:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 1136              		.loc 3 2237 5 view .LVU261
 1137              		.loc 3 2237 14 is_stmt 0 view .LVU262
 1138 001a 5A69     		ldr	r2, [r3, #20]
 1139 001c 42F40032 		orr	r2, r2, #131072
 1140 0020 5A61     		str	r2, [r3, #20]
2238:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 1141              		.loc 3 2238 5 is_stmt 1 view .LVU263
 1142              	.LBB70:
 1143              	.LBI70:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1144              		.loc 2 877 27 view .LVU264
 1145              	.LBB71:
 1146              		.loc 2 879 3 view .LVU265
 1147              		.syntax unified
 1148              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1149 0022 BFF34F8F 		dsb 0xF
 1150              	@ 0 "" 2
 1151              		.thumb
 1152              		.syntax unified
 1153              	.LBE71:
 1154              	.LBE70:
2239:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 1155              		.loc 3 2239 5 view .LVU266
 1156              	.LBB72:
 1157              	.LBI72:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1158              		.loc 2 866 27 view .LVU267
 1159              	.LBB73:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1160              		.loc 2 868 3 view .LVU268
 1161              		.syntax unified
ARM GAS  /tmp/cc3SeI2V.s 			page 85


 1162              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1163 0026 BFF36F8F 		isb 0xF
 1164              	@ 0 "" 2
 1165              		.thumb
 1166              		.syntax unified
 1167              	.LBE73:
 1168              	.LBE72:
 1169              	.LBE61:
 1170              	.LBE60:
 271:Core/Src/main.c **** 
 1171              		.loc 1 271 3 view .LVU269
 1172              	.LBB74:
 1173              	.LBI74:
2240:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2241:Drivers/CMSIS/Include/core_cm7.h **** }
2242:Drivers/CMSIS/Include/core_cm7.h **** 
2243:Drivers/CMSIS/Include/core_cm7.h **** 
2244:Drivers/CMSIS/Include/core_cm7.h **** /**
2245:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2246:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2247:Drivers/CMSIS/Include/core_cm7.h ****   */
2248:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2249:Drivers/CMSIS/Include/core_cm7.h **** {
2250:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2251:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2252:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2253:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2254:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2255:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2256:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2257:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2258:Drivers/CMSIS/Include/core_cm7.h **** }
2259:Drivers/CMSIS/Include/core_cm7.h **** 
2260:Drivers/CMSIS/Include/core_cm7.h **** 
2261:Drivers/CMSIS/Include/core_cm7.h **** /**
2262:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2263:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2264:Drivers/CMSIS/Include/core_cm7.h ****   */
2265:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2266:Drivers/CMSIS/Include/core_cm7.h **** {
2267:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2268:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2269:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2270:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2271:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2272:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2273:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2274:Drivers/CMSIS/Include/core_cm7.h **** }
2275:Drivers/CMSIS/Include/core_cm7.h **** 
2276:Drivers/CMSIS/Include/core_cm7.h **** 
2277:Drivers/CMSIS/Include/core_cm7.h **** /**
2278:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2279:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2280:Drivers/CMSIS/Include/core_cm7.h ****   */
2281:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
 1174              		.loc 3 2281 22 view .LVU270
 1175              	.LBB75:
ARM GAS  /tmp/cc3SeI2V.s 			page 86


2282:Drivers/CMSIS/Include/core_cm7.h **** {
2283:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
 1176              		.loc 3 2284 5 view .LVU271
2285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
 1177              		.loc 3 2285 5 view .LVU272
2286:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
 1178              		.loc 3 2286 5 view .LVU273
2287:Drivers/CMSIS/Include/core_cm7.h **** 
2288:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 1179              		.loc 3 2288 5 view .LVU274
 1180              		.loc 3 2288 17 is_stmt 0 view .LVU275
 1181 002a C3F88410 		str	r1, [r3, #132]
2289:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 1182              		.loc 3 2289 5 is_stmt 1 view .LVU276
 1183              	.LBB76:
 1184              	.LBI76:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1185              		.loc 2 877 27 view .LVU277
 1186              	.LBB77:
 1187              		.loc 2 879 3 view .LVU278
 1188              		.syntax unified
 1189              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1190 002e BFF34F8F 		dsb 0xF
 1191              	@ 0 "" 2
 1192              		.thumb
 1193              		.syntax unified
 1194              	.LBE77:
 1195              	.LBE76:
2290:Drivers/CMSIS/Include/core_cm7.h **** 
2291:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 1196              		.loc 3 2291 5 view .LVU279
 1197              		.loc 3 2291 12 is_stmt 0 view .LVU280
 1198 0032 D3F88040 		ldr	r4, [r3, #128]
 1199              	.LVL94:
2292:Drivers/CMSIS/Include/core_cm7.h **** 
2293:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2294:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 1200              		.loc 3 2294 5 is_stmt 1 view .LVU281
 1201              		.loc 3 2294 10 is_stmt 0 view .LVU282
 1202 0036 C4F34E30 		ubfx	r0, r4, #13, #15
 1203              	.LVL95:
 1204              		.loc 3 2294 10 view .LVU283
 1205 003a 00E0     		b	.L86
 1206              	.LVL96:
 1207              	.L89:
2295:Drivers/CMSIS/Include/core_cm7.h ****     do {
2296:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2297:Drivers/CMSIS/Include/core_cm7.h ****       do {
2298:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2299:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2300:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2301:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2302:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2303:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2304:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 1208              		.loc 3 2304 17 view .LVU284
ARM GAS  /tmp/cc3SeI2V.s 			page 87


 1209 003c 1846     		mov	r0, r3
 1210              	.LVL97:
 1211              	.L86:
2295:Drivers/CMSIS/Include/core_cm7.h ****     do {
 1212              		.loc 3 2295 5 is_stmt 1 view .LVU285
2296:Drivers/CMSIS/Include/core_cm7.h ****       do {
 1213              		.loc 3 2296 7 view .LVU286
2296:Drivers/CMSIS/Include/core_cm7.h ****       do {
 1214              		.loc 3 2296 12 is_stmt 0 view .LVU287
 1215 003e C4F3C902 		ubfx	r2, r4, #3, #10
 1216              	.LVL98:
 1217              	.L85:
2297:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 1218              		.loc 3 2297 7 is_stmt 1 view .LVU288
2298:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 1219              		.loc 3 2298 9 view .LVU289
2298:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 1220              		.loc 3 2298 52 is_stmt 0 view .LVU290
 1221 0042 43F6E073 		movw	r3, #16352
 1222 0046 03EA4013 		and	r3, r3, r0, lsl #5
2298:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 1223              		.loc 3 2298 73 view .LVU291
 1224 004a 43EA8273 		orr	r3, r3, r2, lsl #30
2298:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 1225              		.loc 3 2298 20 view .LVU292
 1226 004e 2049     		ldr	r1, .L92
 1227 0050 C1F86032 		str	r3, [r1, #608]
2303:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 1228              		.loc 3 2303 15 is_stmt 1 view .LVU293
 1229 0054 1346     		mov	r3, r2
2303:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 1230              		.loc 3 2303 20 is_stmt 0 view .LVU294
 1231 0056 013A     		subs	r2, r2, #1
 1232              	.LVL99:
2303:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 1233              		.loc 3 2303 7 view .LVU295
 1234 0058 002B     		cmp	r3, #0
 1235 005a F2D1     		bne	.L85
 1236              		.loc 3 2304 12 is_stmt 1 view .LVU296
 1237              		.loc 3 2304 17 is_stmt 0 view .LVU297
 1238 005c 431E     		subs	r3, r0, #1
 1239              	.LVL100:
 1240              		.loc 3 2304 5 view .LVU298
 1241 005e 0028     		cmp	r0, #0
 1242 0060 ECD1     		bne	.L89
2305:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 1243              		.loc 3 2305 5 is_stmt 1 view .LVU299
 1244              	.LBB78:
 1245              	.LBI78:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1246              		.loc 2 877 27 view .LVU300
 1247              	.LBB79:
 1248              		.loc 2 879 3 view .LVU301
 1249              		.syntax unified
 1250              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1251 0062 BFF34F8F 		dsb 0xF
 1252              	@ 0 "" 2
ARM GAS  /tmp/cc3SeI2V.s 			page 88


 1253              		.thumb
 1254              		.syntax unified
 1255              	.LBE79:
 1256              	.LBE78:
2306:Drivers/CMSIS/Include/core_cm7.h **** 
2307:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 1257              		.loc 3 2307 5 view .LVU302
 1258              		.loc 3 2307 14 is_stmt 0 view .LVU303
 1259 0066 4B69     		ldr	r3, [r1, #20]
 1260              	.LVL101:
 1261              		.loc 3 2307 14 view .LVU304
 1262 0068 43F48033 		orr	r3, r3, #65536
 1263 006c 4B61     		str	r3, [r1, #20]
2308:Drivers/CMSIS/Include/core_cm7.h **** 
2309:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 1264              		.loc 3 2309 5 is_stmt 1 view .LVU305
 1265              	.LBB80:
 1266              	.LBI80:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1267              		.loc 2 877 27 view .LVU306
 1268              	.LBB81:
 1269              		.loc 2 879 3 view .LVU307
 1270              		.syntax unified
 1271              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1272 006e BFF34F8F 		dsb 0xF
 1273              	@ 0 "" 2
 1274              		.thumb
 1275              		.syntax unified
 1276              	.LBE81:
 1277              	.LBE80:
2310:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 1278              		.loc 3 2310 5 view .LVU308
 1279              	.LBB82:
 1280              	.LBI82:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1281              		.loc 2 866 27 view .LVU309
 1282              	.LBB83:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1283              		.loc 2 868 3 view .LVU310
 1284              		.syntax unified
 1285              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1286 0072 BFF36F8F 		isb 0xF
 1287              	@ 0 "" 2
 1288              	.LVL102:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1289              		.loc 2 868 3 is_stmt 0 view .LVU311
 1290              		.thumb
 1291              		.syntax unified
 1292              	.LBE83:
 1293              	.LBE82:
 1294              	.LBE75:
 1295              	.LBE74:
 276:Core/Src/main.c **** 
 1296              		.loc 1 276 3 is_stmt 1 view .LVU312
 1297 0076 FFF7FEFF 		bl	HAL_Init
 1298              	.LVL103:
 282:Core/Src/main.c **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 89


 1299              		.loc 1 282 3 view .LVU313
 1300 007a FFF7FEFF 		bl	SystemClock_Config
 1301              	.LVL104:
 289:Core/Src/main.c ****   MX_DMA_Init();
 1302              		.loc 1 289 3 view .LVU314
 1303 007e FFF7FEFF 		bl	MX_GPIO_Init
 1304              	.LVL105:
 290:Core/Src/main.c ****   MX_ADC1_Init();
 1305              		.loc 1 290 3 view .LVU315
 1306 0082 FFF7FEFF 		bl	MX_DMA_Init
 1307              	.LVL106:
 291:Core/Src/main.c ****   MX_TIM1_Init();
 1308              		.loc 1 291 3 view .LVU316
 1309 0086 FFF7FEFF 		bl	MX_ADC1_Init
 1310              	.LVL107:
 292:Core/Src/main.c ****   MX_LWIP_Init();
 1311              		.loc 1 292 3 view .LVU317
 1312 008a FFF7FEFF 		bl	MX_TIM1_Init
 1313              	.LVL108:
 293:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1314              		.loc 1 293 3 view .LVU318
 1315 008e FFF7FEFF 		bl	MX_LWIP_Init
 1316              	.LVL109:
 295:Core/Src/main.c ****   udpClient_connect();
 1317              		.loc 1 295 3 view .LVU319
 1318 0092 0220     		movs	r0, #2
 1319 0094 FFF7FEFF 		bl	testLeds
 1320              	.LVL110:
 296:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 1321              		.loc 1 296 3 view .LVU320
 1322 0098 FFF7FEFF 		bl	udpClient_connect
 1323              	.LVL111:
 297:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_buf, ADC_BUF_LEN);
 1324              		.loc 1 297 3 view .LVU321
 1325 009c 0D48     		ldr	r0, .L92+4
 1326 009e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1327              	.LVL112:
 298:Core/Src/main.c ****   testLeds(1);
 1328              		.loc 1 298 3 view .LVU322
 1329 00a2 4FF48062 		mov	r2, #1024
 1330 00a6 0C49     		ldr	r1, .L92+8
 1331 00a8 0C48     		ldr	r0, .L92+12
 1332 00aa FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1333              	.LVL113:
 299:Core/Src/main.c ****   // for (uint16_t i = 0; i < ADC_BUF_LEN; i++) {
 1334              		.loc 1 299 3 view .LVU323
 1335 00ae 0120     		movs	r0, #1
 1336 00b0 FFF7FEFF 		bl	testLeds
 1337              	.LVL114:
 1338 00b4 06E0     		b	.L88
 1339              	.L91:
 311:Core/Src/main.c ****     }
 1340              		.loc 1 311 7 view .LVU324
 1341 00b6 FFF7FEFF 		bl	handleError
 1342              	.LVL115:
 1343              	.L87:
 313:Core/Src/main.c **** 
ARM GAS  /tmp/cc3SeI2V.s 			page 90


 1344              		.loc 1 313 4 view .LVU325
 1345 00ba 0948     		ldr	r0, .L92+16
 1346 00bc FFF7FEFF 		bl	ethernetif_input
 1347              	.LVL116:
 315:Core/Src/main.c ****     /* USER CODE END WHILE */
 1348              		.loc 1 315 4 view .LVU326
 1349 00c0 FFF7FEFF 		bl	sys_check_timeouts
 1350              	.LVL117:
 307:Core/Src/main.c ****   {
 1351              		.loc 1 307 9 view .LVU327
 1352              	.L88:
 307:Core/Src/main.c ****   {
 1353              		.loc 1 307 3 view .LVU328
 310:Core/Src/main.c ****       handleError();
 1354              		.loc 1 310 5 view .LVU329
 310:Core/Src/main.c ****       handleError();
 1355              		.loc 1 310 24 is_stmt 0 view .LVU330
 1356 00c4 074B     		ldr	r3, .L92+20
 1357 00c6 1B68     		ldr	r3, [r3]
 310:Core/Src/main.c ****       handleError();
 1358              		.loc 1 310 8 view .LVU331
 1359 00c8 002B     		cmp	r3, #0
 1360 00ca F4DC     		bgt	.L91
 1361 00cc F5E7     		b	.L87
 1362              	.L93:
 1363 00ce 00BF     		.align	2
 1364              	.L92:
 1365 00d0 00ED00E0 		.word	-536810240
 1366 00d4 00000000 		.word	htim1
 1367 00d8 00000000 		.word	.LANCHOR2
 1368 00dc 00000000 		.word	hadc1
 1369 00e0 00000000 		.word	gnetif
 1370 00e4 00000000 		.word	.LANCHOR4
 1371              		.cfi_endproc
 1372              	.LFE178:
 1374              		.global	buf_head
 1375              		.global	APP_ERROR_CODE
 1376              		.global	txBuf
 1377              		.global	upcb
 1378              		.global	adc_buf
 1379              		.section	.bss.APP_ERROR_CODE,"aw",%nobits
 1380              		.align	2
 1381              		.set	.LANCHOR4,. + 0
 1384              	APP_ERROR_CODE:
 1385 0000 00000000 		.space	4
 1386              		.section	.bss.adc_buf,"aw",%nobits
 1387              		.align	2
 1388              		.set	.LANCHOR2,. + 0
 1391              	adc_buf:
 1392 0000 00000000 		.space	2048
 1392      00000000 
 1392      00000000 
 1392      00000000 
 1392      00000000 
 1393              		.section	.bss.txBuf,"aw",%nobits
 1394              		.align	2
 1395              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/cc3SeI2V.s 			page 91


 1398              	txBuf:
 1399 0000 00000000 		.space	4
 1400              		.section	.bss.upcb,"aw",%nobits
 1401              		.align	2
 1402              		.set	.LANCHOR3,. + 0
 1405              	upcb:
 1406 0000 00000000 		.space	4
 1407              		.section	.data.buf_head,"aw"
 1408              		.align	2
 1409              		.set	.LANCHOR1,. + 0
 1412              	buf_head:
 1413 0000 1603     		.ascii	"\026\003"
 1414              		.text
 1415              	.Letext0:
 1416              		.file 4 "/home/lobanov/st/stm32cubeclt_1.12.1/GNU-tools-for-STM32/arm-none-eabi/include/machine/_d
 1417              		.file 5 "/home/lobanov/st/stm32cubeclt_1.12.1/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdin
 1418              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1419              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1420              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1421              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1422              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1423              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1424              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 1425              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1426              		.file 14 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1427              		.file 15 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1428              		.file 16 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1429              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 1430              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1431              		.file 19 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1432              		.file 20 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1433              		.file 21 "Core/Inc/adc.h"
 1434              		.file 22 "Core/Inc/tim.h"
 1435              		.file 23 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 1436              		.file 24 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 1437              		.file 25 "LWIP/App/lwip.h"
 1438              		.file 26 "Core/Inc/dma.h"
 1439              		.file 27 "Core/Inc/gpio.h"
 1440              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 1441              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1442              		.file 30 "LWIP/Target/ethernetif.h"
 1443              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1444              		.file 32 "<built-in>"
ARM GAS  /tmp/cc3SeI2V.s 			page 92


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc3SeI2V.s:19     .text.udpClient_send1:0000000000000000 $t
     /tmp/cc3SeI2V.s:24     .text.udpClient_send1:0000000000000000 udpClient_send1
     /tmp/cc3SeI2V.s:93     .text.udpClient_send1:000000000000004c $d
     /tmp/cc3SeI2V.s:102    .text.udpClient_send2:0000000000000000 $t
     /tmp/cc3SeI2V.s:107    .text.udpClient_send2:0000000000000000 udpClient_send2
     /tmp/cc3SeI2V.s:175    .text.udpClient_send2:000000000000004c $d
     /tmp/cc3SeI2V.s:184    .text.udp_receive_callback:0000000000000000 $t
     /tmp/cc3SeI2V.s:190    .text.udp_receive_callback:0000000000000000 udp_receive_callback
     /tmp/cc3SeI2V.s:216    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/cc3SeI2V.s:222    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/cc3SeI2V.s:256    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000014 $d
     /tmp/cc3SeI2V.s:261    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc3SeI2V.s:267    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc3SeI2V.s:301    .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/cc3SeI2V.s:306    .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/cc3SeI2V.s:312    .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/cc3SeI2V.s:348    .text.HAL_ADC_ErrorCallback:0000000000000020 $d
     /tmp/cc3SeI2V.s:355    .text.ADC_DMAError:0000000000000000 $t
     /tmp/cc3SeI2V.s:361    .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/cc3SeI2V.s:397    .text.ADC_DMAError:0000000000000020 $d
     /tmp/cc3SeI2V.s:404    .text.udpClient_connect:0000000000000000 $t
     /tmp/cc3SeI2V.s:410    .text.udpClient_connect:0000000000000000 udpClient_connect
     /tmp/cc3SeI2V.s:483    .text.udpClient_connect:000000000000003c $d
     /tmp/cc3SeI2V.s:491    .text.testLeds:0000000000000000 $t
     /tmp/cc3SeI2V.s:497    .text.testLeds:0000000000000000 testLeds
     /tmp/cc3SeI2V.s:600    .text.testLeds:0000000000000060 $d
     /tmp/cc3SeI2V.s:605    .text.errorLeds:0000000000000000 $t
     /tmp/cc3SeI2V.s:611    .text.errorLeds:0000000000000000 errorLeds
     /tmp/cc3SeI2V.s:798    .text.errorLeds:00000000000000a0 $d
     /tmp/cc3SeI2V.s:804    .text.handleError:0000000000000000 $t
     /tmp/cc3SeI2V.s:810    .text.handleError:0000000000000000 handleError
     /tmp/cc3SeI2V.s:838    .text.handleError:0000000000000010 $d
     /tmp/cc3SeI2V.s:843    .text.Error_Handler:0000000000000000 $t
     /tmp/cc3SeI2V.s:849    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc3SeI2V.s:881    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc3SeI2V.s:887    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc3SeI2V.s:1045   .text.SystemClock_Config:00000000000000a8 $d
     /tmp/cc3SeI2V.s:1051   .text.main:0000000000000000 $t
     /tmp/cc3SeI2V.s:1057   .text.main:0000000000000000 main
     /tmp/cc3SeI2V.s:1365   .text.main:00000000000000d0 $d
     /tmp/cc3SeI2V.s:1412   .data.buf_head:0000000000000000 buf_head
     /tmp/cc3SeI2V.s:1384   .bss.APP_ERROR_CODE:0000000000000000 APP_ERROR_CODE
     /tmp/cc3SeI2V.s:1398   .bss.txBuf:0000000000000000 txBuf
     /tmp/cc3SeI2V.s:1405   .bss.upcb:0000000000000000 upcb
     /tmp/cc3SeI2V.s:1391   .bss.adc_buf:0000000000000000 adc_buf
     /tmp/cc3SeI2V.s:1380   .bss.APP_ERROR_CODE:0000000000000000 $d
     /tmp/cc3SeI2V.s:1387   .bss.adc_buf:0000000000000000 $d
     /tmp/cc3SeI2V.s:1394   .bss.txBuf:0000000000000000 $d
     /tmp/cc3SeI2V.s:1401   .bss.upcb:0000000000000000 $d
     /tmp/cc3SeI2V.s:1408   .data.buf_head:0000000000000000 $d

UNDEFINED SYMBOLS
pbuf_alloc
pbuf_take_at
udp_send
ARM GAS  /tmp/cc3SeI2V.s 			page 93


pbuf_free
HAL_ADC_Stop_DMA
HAL_ADC_Start_DMA
hadc1
udp_new
udp_bind
udp_connect
udp_recv
HAL_GPIO_TogglePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_TIM1_Init
MX_LWIP_Init
HAL_TIM_Base_Start_IT
ethernetif_input
sys_check_timeouts
htim1
gnetif
